name: Validate Doxygen documentation

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.BOT_ACCESS_TOKEN }}

    - name: Install Doxygen
      run: sudo apt-get update && sudo apt-get install -y doxygen

    - name: Install Graphviz
      run: sudo apt-get update && sudo apt-get install -y graphviz

    - name: Remove old comments
      uses: izhangzhihao/delete-comment@master
      with:
        github_token: ${{ secrets.BOT_ACCESS_TOKEN }}
        delete_user_name: EreliaCorp
        issue_number: ${{ github.event.number }}

    - name: Generate Doxygen
      run: doxygen Doxyfile

    - name: Refine warnings and check if they exist
      id: check_warnings
      run: |
        if [ -s doxygen_warnings.log ]; then
          sed -i 's/\/home\/runner\/work\/Sparkle\/Sparkle\//- /g' doxygen_warnings.log
          sed -i 's/: warning:/\n/g' doxygen_warnings.log
          awk '{if (!/^-/) print "    "$0; else print $0;}' doxygen_warnings.log > tmp && mv tmp doxygen_warnings.log
          awk '{if (NR!=1 && /^-/) print "\n\n"; print $0;}' doxygen_warnings.log > tmp && mv tmp doxygen_warnings.log
          echo -e "There is a list of documentation error you need to fix before merging this PullRequest :\n\n" | cat - doxygen_warnings.log > tmp && mv tmp doxygen_warnings.log
          echo "check_warnings=true" >> $GITHUB_ENV
        else
          echo "check_warnings=false" >> $GITHUB_ENV
        fi
    
    - name: Create comment if warnings exist
      if: env.check_warnings == 'true'
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.BOT_ACCESS_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: 'doxygen_warnings.log'

    - name: Fail the workflow if warnings exist
      if: env.check_warnings == 'true'
      run: exit 1
