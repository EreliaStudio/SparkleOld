name: Generate Doxygen

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'  # Ignore changes in 'doc' directory

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.BOT_ACCESS_TOKEN }}

    - name: Install Doxygen
      run: sudo apt-get update && sudo apt-get install -y doxygen

    - name: Install Graphviz
      run: sudo apt-get update && sudo apt-get install graphviz

    - name: Generate Doxygen
      run: doxygen Doxyfile

    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.9.3
      with:
        github_token: ${{ secrets.BOT_ACCESS_TOKEN }}
        publish_dir: ./docs/html

    - name: Remove old documentation issues
      run: |
        # Get all issues with title "Missing documentation"
        ISSUES=$(curl -H "Authorization: token ${{ secrets.BOT_ACCESS_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$GITHUB_REPOSITORY/issues?state=open | jq '.[] | select(.title=="Missing documentation") | .number')
        # Close all issues with title "Missing documentation"
        for ISSUE in $ISSUES; do
          JSON_DATA='{
            "title":"DEPRECATED : Missing documentation",
            "state": "closed"
          }'
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.BOT_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$ISSUE \
            -d "$JSON_DATA"
        done

    - name: Prepare file content
      run: |
        cat doxygen_warnings.log
        sed -i 's/\/home\/runner\/work\/Sparkle\/Sparkle\//### /g' doxygen_warnings.log
        sed -i 's/: warning:/\n/g' doxygen_warnings.log
        awk '{if (!/^###/) print "> "$0; else print $0;}' doxygen_warnings.log > tmp && mv tmp doxygen_warnings.log
        awk '{if (NR!=1 && /^###/) print "---"; print $0;}' doxygen_warnings.log > tmp && mv tmp doxygen_warnings.log
        echo -e "\n\nProcessed file :"
        cat doxygen_warnings.log

    - name: Check if warnings exist
      id: check_warnings
      run: |
        WARNINGS=$(cat doxygen_warnings.log | wc -l)
        echo "WARNINGS=$WARNINGS" >> $GITHUB_ENV
        if [ $WARNINGS -gt 0 ]
        then
          echo "::set-output name=warnings::true"
        else
          echo "::set-output name=warnings::false"
        fi
  
    - name: Create Issue From Doxygen file
      if: steps.check_warnings.outputs.warnings == 'true'
      id: ciff
      uses: peter-evans/create-issue-from-file@v4
      with:
        token: ${{ secrets.BOT_ACCESS_TOKEN }}
        title: Missing documentation
        content-filepath: ./doxygen_warnings.log
        labels: |
          Documentation
