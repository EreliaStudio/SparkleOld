name: Generate Doxygen

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'  # Ignore changes in 'doc' directory

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.BOT_ACCESS_TOKEN }}

    - name: Check if last commit is from Doxygen
      run: |
        if [ "$(git log -1 --pretty=format:'%ae')" = "CI-CL@github.com" ]; then
          echo "Last commit is from CI. Aborting."
          exit 0
        fi

    - name: Install Doxygen
      run: sudo apt-get update && sudo apt-get install -y doxygen

    - name: Install Graphviz
      run: sudo apt-get update && sudo apt-get install graphviz

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Deletion of old docs
      run: |
        if [ -d "docs" ]; then
          git rm -rf docs
        fi

    - name: Generate Doxygen
      run: doxygen Doxyfile
      
    - name: Configure git
      run: |
        git config --local user.email "CI-CL@github.com"
        git config --local user.name "Doxygen Generation"

    - name: Commit and push changes
      run: |
        git add docs
        
        git commit -m "Update Doxygen"
        git push

    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.9.3
      with:
        github_token: ${{ secrets.BOT_ACCESS_TOKEN }}
        publish_dir: ./docs/html

    - name: Check for missing documentation and create issue
      run: |
        if [ -e doxygen_warnings.log ]; then
          sed -i 's|/home/runner/work/Sparkle/Sparkle/||g;s|warning: ||g' doxygen_warnings.log
          split -l 50 doxygen_warnings.log chunk-
          CHUNKS=$(ls chunk-*)
        fi
        for CHUNK in $CHUNKS; do
          CONTENT=$(cat $CHUNK | sed ':a;N;$!ba;s/\n/\\n/g')
          if [ "$CONTENT" != '' ]; then
            JSON_DATA="{
              \"title\": \"Missing Doxygen Documentation\",
              \"body\": \"There is a set of documentation missing:\n$CONTENT\"
            }"
            echo $JSON_DATA  # Print JSON data to debug
            curl -X POST \
              -H "Authorization: token ${{ secrets.BOT_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$GITHUB_REPOSITORY/issues \
              -d "$JSON_DATA"
          fi
        done

    - name: Delete Doxygen log files
      run: rm doxygen_warnings.log || true