<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="spk__thread__safe__queue_8hpp" kind="file" language="C++">
    <compoundname>spk_thread_safe_queue.hpp</compoundname>
    <includes local="no">mutex</includes>
    <includes local="no">deque</includes>
    <includes local="no">condition_variable</includes>
    <includedby refid="linux_2spk__API__module_8hpp" local="yes">includes/application/modules/linux/spk_API_module.hpp</includedby>
    <includedby refid="spk__abstract__module_8hpp" local="yes">includes/application/modules/spk_abstract_module.hpp</includedby>
    <includedby refid="windows_2spk__API__module_8hpp" local="yes">includes/application/modules/windows/spk_API_module.hpp</includedby>
    <includedby refid="sparkle_8hpp" local="yes">includes/sparkle.hpp</includedby>
    <includedby refid="spk__worker__pool_8hpp" local="yes">includes/threading/spk_worker_pool.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>condition_variable</label>
      </node>
      <node id="1">
        <label>includes/threading/spk_thread_safe_queue.hpp</label>
        <link refid="spk__thread__safe__queue_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>deque</label>
      </node>
      <node id="2">
        <label>mutex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>includes/application/modules/spk_system_module.hpp</label>
        <link refid="spk__system__module_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>includes/debug/spk_profiler.hpp</label>
        <link refid="spk__profiler_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
<<<<<<< HEAD
      <node id="18">
=======
      <node id="17">
>>>>>>> 5095d1a (Update Doxygen)
        <label>includes/application/modules/spk_widget_module.hpp</label>
        <link refid="spk__widget__module_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
<<<<<<< HEAD
      <node id="17">
        <label>includes/input/spk_input.hpp</label>
        <link refid="spk__input_8hpp_source"/>
      </node>
      <node id="21">
=======
      <node id="20">
>>>>>>> 5095d1a (Update Doxygen)
        <label>includes/threading/spk_worker_pool.hpp</label>
        <link refid="spk__worker__pool_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>includes/application/modules/spk_keyboard_module.hpp</label>
        <link refid="spk__keyboard__module_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>includes/application/modules/spk_abstract_module.hpp</label>
        <link refid="spk__abstract__module_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
<<<<<<< HEAD
=======
        <childnode refid="17" relation="include">
        </childnode>
>>>>>>> 5095d1a (Update Doxygen)
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
<<<<<<< HEAD
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
=======
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
>>>>>>> 5095d1a (Update Doxygen)
        <label>includes/application/modules/windows/spk_window_module.hpp</label>
        <link refid="windows_2spk__window__module_8hpp_source"/>
      </node>
      <node id="8">
        <label>includes/sparkle.hpp</label>
        <link refid="sparkle_8hpp_source"/>
      </node>
      <node id="9">
        <label>includes/application/modules/spk_mouse_module.hpp</label>
        <link refid="spk__mouse__module_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>includes/application/modules/linux/spk_API_module.hpp</label>
        <link refid="linux_2spk__API__module_8hpp_source"/>
      </node>
      <node id="11">
        <label>includes/application/modules/spk_time_module.hpp</label>
        <link refid="spk__time__module_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
<<<<<<< HEAD
      <node id="19">
=======
      <node id="18">
>>>>>>> 5095d1a (Update Doxygen)
        <label>includes/application/modules/windows/spk_API_module.hpp</label>
        <link refid="windows_2spk__API__module_8hpp_source"/>
      </node>
      <node id="16">
        <label>includes/application/modules/spk_profiler_module.hpp</label>
        <link refid="spk__profiler__module_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>includes/system/spk_timer.hpp</label>
        <link refid="spk__timer_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
<<<<<<< HEAD
        <childnode refid="17" relation="include">
        </childnode>
=======
>>>>>>> 5095d1a (Update Doxygen)
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>includes/system/spk_time_metrics.hpp</label>
        <link refid="spk__time__metrics_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>includes/application/modules/linux/spk_window_module.hpp</label>
        <link refid="linux_2spk__window__module_8hpp_source"/>
      </node>
      <node id="1">
        <label>includes/threading/spk_thread_safe_queue.hpp</label>
        <link refid="spk__thread__safe__queue_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
<<<<<<< HEAD
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
=======
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
>>>>>>> 5095d1a (Update Doxygen)
        </childnode>
      </node>
      <node id="13">
        <label>includes/system/spk_chronometer.hpp</label>
        <link refid="spk__chronometer_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>includes/application/concrete/windows/spk_graphical_application.hpp</label>
        <link refid="windows_2spk__graphical__application_8hpp_source"/>
      </node>
      <node id="6">
        <label>includes/application/concrete/linux/spk_graphical_application.hpp</label>
        <link refid="linux_2spk__graphical__application_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classspk_1_1ThreadSafeQueue" prot="public">spk::ThreadSafeQueue</innerclass>
    <innernamespace refid="namespacespk">spk</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">spk</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19" refid="classspk_1_1ThreadSafeQueue" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classspk_1_1ThreadSafeQueue" kindref="compound">ThreadSafeQueue</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::mutex<sp/><ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="classspk_1_1ThreadSafeQueue_1a4c8b049876a04dcc317169d7f5147e3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::mutex<sp/><ref refid="classspk_1_1ThreadSafeQueue_1a4c8b049876a04dcc317169d7f5147e3c" kindref="member">muxBlocking</ref>;<sp/></highlight></codeline>
<codeline lineno="25" refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::deque&lt;T&gt;<sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="classspk_1_1ThreadSafeQueue_1af85dcfbf85ff17055581432602a3fca2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::condition_variable<sp/><ref refid="classspk_1_1ThreadSafeQueue_1af85dcfbf85ff17055581432602a3fca2" kindref="member">cvBlocking</ref>;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="classspk_1_1ThreadSafeQueue_1ad95a7d5bfe93b6d2146e64ee2a433b1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1ad95a7d5bfe93b6d2146e64ee2a433b1b" kindref="member">ThreadSafeQueue</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classspk_1_1ThreadSafeQueue_1a7ef0d2aea7e6ff8d3f80e4aba00855f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1a7ef0d2aea7e6ff8d3f80e4aba00855f0" kindref="member">ThreadSafeQueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue" kindref="compound">ThreadSafeQueue&lt;T&gt;</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classspk_1_1ThreadSafeQueue_1aa8d9e71b8bee427e21a7121759c0c690" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aa8d9e71b8bee427e21a7121759c0c690" kindref="member">~ThreadSafeQueue</ref>()<sp/>{<sp/><ref refid="classspk_1_1ThreadSafeQueue_1a5d0f55c23e83d574e0e787249adb24f6" kindref="member">clear</ref>();<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classspk_1_1ThreadSafeQueue_1a3f339b2424b4697100d4bb3a501c4bdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classspk_1_1ThreadSafeQueue_1a3f339b2424b4697100d4bb3a501c4bdc" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;p_index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>[p_index]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classspk_1_1ThreadSafeQueue_1acffc6621639cde4e29248fec8db7722e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;<ref refid="classspk_1_1ThreadSafeQueue_1acffc6621639cde4e29248fec8db7722e" kindref="member">front</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.front();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classspk_1_1ThreadSafeQueue_1a71c53d3168aef54e9d0fecbb3202b7b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;<ref refid="classspk_1_1ThreadSafeQueue_1a71c53d3168aef54e9d0fecbb3202b7b8" kindref="member">back</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.back();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classspk_1_1ThreadSafeQueue_1abdb4b57746427a0f8b7f4e8aff55eff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classspk_1_1ThreadSafeQueue_1abdb4b57746427a0f8b7f4e8aff55eff4" kindref="member">front</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="97"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.front();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classspk_1_1ThreadSafeQueue_1a0525e56c7f3ec4da434501ffd3f731b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classspk_1_1ThreadSafeQueue_1a0525e56c7f3ec4da434501ffd3f731b4" kindref="member">back</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="110"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.back();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classspk_1_1ThreadSafeQueue_1aaa11b3687a413ed1d05020e9679d708e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="classspk_1_1ThreadSafeQueue_1aaa11b3687a413ed1d05020e9679d708e" kindref="member">pop_front</ref>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>std::move(<ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.front());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.pop_front();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classspk_1_1ThreadSafeQueue_1a8507da2707f396a0db12cbff753c2030" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="classspk_1_1ThreadSafeQueue_1a8507da2707f396a0db12cbff753c2030" kindref="member">pop_back</ref>()</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>std::move(<ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.back());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.pop_back();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classspk_1_1ThreadSafeQueue_1af3d6530f982fbd9b8342bf69b79f170c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1af3d6530f982fbd9b8342bf69b79f170c" kindref="member">push_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;item)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.emplace_back(std::move(item));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul(<ref refid="classspk_1_1ThreadSafeQueue_1a4c8b049876a04dcc317169d7f5147e3c" kindref="member">muxBlocking</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1af85dcfbf85ff17055581432602a3fca2" kindref="member">cvBlocking</ref>.notify_one();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classspk_1_1ThreadSafeQueue_1a4a58ccd7575177fed56ecfb028e6537a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1a4a58ccd7575177fed56ecfb028e6537a" kindref="member">push_front</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;item)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.emplace_front(std::move(item));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul(<ref refid="classspk_1_1ThreadSafeQueue_1a4c8b049876a04dcc317169d7f5147e3c" kindref="member">muxBlocking</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1af85dcfbf85ff17055581432602a3fca2" kindref="member">cvBlocking</ref>.notify_one();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classspk_1_1ThreadSafeQueue_1ae0f8b05a694cb48081a53d1f496c1e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1ae0f8b05a694cb48081a53d1f496c1e5f" kindref="member">empty</ref>()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.empty();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classspk_1_1ThreadSafeQueue_1a6dacede3ce86503fbbd8cc3da5ac67e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1a6dacede3ce86503fbbd8cc3da5ac67e5" kindref="member">size</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.size();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classspk_1_1ThreadSafeQueue_1a5d0f55c23e83d574e0e787249adb24f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1a5d0f55c23e83d574e0e787249adb24f6" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::scoped_lock<sp/>lock(<ref refid="classspk_1_1ThreadSafeQueue_1ad0a76bf1be9b19a1232a06f6ced62d88" kindref="member">muxQueue</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1aef0eb26c9d4c8bea6249120a5a674737" kindref="member">_content</ref>.clear();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classspk_1_1ThreadSafeQueue_1a75768d4042460537d331f670a798ce1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classspk_1_1ThreadSafeQueue_1a75768d4042460537d331f670a798ce1b" kindref="member">wait</ref>()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classspk_1_1ThreadSafeQueue_1ae0f8b05a694cb48081a53d1f496c1e5f" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul(<ref refid="classspk_1_1ThreadSafeQueue_1a4c8b049876a04dcc317169d7f5147e3c" kindref="member">muxBlocking</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspk_1_1ThreadSafeQueue_1af85dcfbf85ff17055581432602a3fca2" kindref="member">cvBlocking</ref>.wait(ul);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="includes/threading/spk_thread_safe_queue.hpp"/>
  </compounddef>
</doxygen>
