<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classspk_1_1MouseInput" kind="class" language="C++" prot="public">
    <compoundname>spk::MouseInput</compoundname>
    <basecompoundref refid="classspk_1_1IInput" prot="public" virt="non-virtual">spk::IInput</basecompoundref>
    <includes refid="spk__mouse__input_8hpp" local="no">spk_mouse_input.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspk_1_1MouseInput_1a5ca8b4362c6886c2ddc9313cab00a140" prot="private" static="no" mutable="no">
        <type><ref refid="classspk_1_1Mouse_1a7e51467586bf8952f05461cc3b9fd5b5" kindref="member">spk::Mouse::Button</ref></type>
        <definition>spk::Mouse::Button spk::MouseInput::_button</definition>
        <argsstring></argsstring>
        <name>_button</name>
        <briefdescription>
<para>The mouse button that this <ref refid="classspk_1_1MouseInput" kindref="compound">MouseInput</ref> object is monitoring. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_mouse_input.hpp" line="22" column="20" bodyfile="includes/input/spk_mouse_input.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1MouseInput_1aab0d5e7a60ac0c5336aba10156249d92" prot="private" static="no" mutable="no">
        <type>spk::InputStatus</type>
        <definition>spk::InputStatus spk::MouseInput::_expectedStatus</definition>
        <argsstring></argsstring>
        <name>_expectedStatus</name>
        <briefdescription>
<para>The expected status of the mouse button. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_mouse_input.hpp" line="27" column="18" bodyfile="includes/input/spk_mouse_input.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspk_1_1MouseInput_1a7e74631b44207f9901caa61265640df4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool spk::MouseInput::_isExecutionNeeded</definition>
        <argsstring>()</argsstring>
        <name>_isExecutionNeeded</name>
        <reimplements refid="classspk_1_1IInput_1af79e6745cbed467b0ba91ce1ff741662">_isExecutionNeeded</reimplements>
        <briefdescription>
<para>Checks whether the function execution is needed. </para>
        </briefdescription>
        <detaileddescription>
<para>The function execution is needed if the current status of the specified mouse button matches the expected status.</para>
<para><simplesect kind="return"><para>true if the function execution is needed, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_mouse_input.hpp" line="36" column="6" bodyfile="includes/input/spk_mouse_input.hpp" bodystart="36" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspk_1_1MouseInput_1a85acfc45a8c08cddb3f4ff06e3db8db9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Funct</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>spk::MouseInput::MouseInput</definition>
        <argsstring>(spk::Mouse::Button p_button, spk::InputStatus p_expectedStatus, unsigned long p_delayBetweenInput, Funct &amp;&amp;p_funct, Args &amp;&amp;... p_args)</argsstring>
        <name>MouseInput</name>
        <param>
          <type><ref refid="classspk_1_1Mouse_1a7e51467586bf8952f05461cc3b9fd5b5" kindref="member">spk::Mouse::Button</ref></type>
          <declname>p_button</declname>
        </param>
        <param>
          <type>spk::InputStatus</type>
          <declname>p_expectedStatus</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>p_delayBetweenInput</declname>
        </param>
        <param>
          <type>Funct &amp;&amp;</type>
          <declname>p_funct</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>p_args</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classspk_1_1MouseInput" kindref="compound">MouseInput</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Funct</parametername>
</parameternamelist>
<parameterdescription>
<para>Function type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_button</parametername>
</parameternamelist>
<parameterdescription>
<para>The mouse button that this <ref refid="classspk_1_1MouseInput" kindref="compound">MouseInput</ref> object should monitor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_expectedStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected status of the mouse button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_delayBetweenInput</parametername>
</parameternamelist>
<parameterdescription>
<para>Input delay for the timer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_funct</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be executed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments for the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_mouse_input.hpp" line="53" column="1" bodyfile="includes/input/spk_mouse_input.hpp" bodystart="53" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A concrete class derived from <ref refid="classspk_1_1IInput" kindref="compound">IInput</ref> that represents mouse input. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classspk_1_1MouseInput" kindref="compound">MouseInput</ref> is a specific implementation of <ref refid="classspk_1_1IInput" kindref="compound">IInput</ref> for mouse inputs. It encapsulates a mouse button and the expected status of the button. The encapsulated function is executed if the current status of the specified mouse button matches the expected status. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>spk::IInput</label>
        <link refid="classspk_1_1IInput"/>
      </node>
      <node id="1">
        <label>spk::MouseInput</label>
        <link refid="classspk_1_1MouseInput"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>spk::IInput</label>
        <link refid="classspk_1_1IInput"/>
        <childnode refid="3" relation="usage">
          <edgelabel>_timer</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>spk::MouseInput</label>
        <link refid="classspk_1_1MouseInput"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>spk::Timer</label>
        <link refid="classspk_1_1Timer"/>
      </node>
    </collaborationgraph>
    <location file="includes/input/spk_mouse_input.hpp" line="16" column="1" bodyfile="includes/input/spk_mouse_input.hpp" bodystart="17" bodyend="60"/>
    <listofallmembers>
      <member refid="classspk_1_1MouseInput_1a5ca8b4362c6886c2ddc9313cab00a140" prot="private" virt="non-virtual"><scope>spk::MouseInput</scope><name>_button</name></member>
      <member refid="classspk_1_1MouseInput_1aab0d5e7a60ac0c5336aba10156249d92" prot="private" virt="non-virtual"><scope>spk::MouseInput</scope><name>_expectedStatus</name></member>
      <member refid="classspk_1_1IInput_1a3f003a9960bf0f09e9c40c0cb19b9b11" prot="protected" virt="non-virtual"><scope>spk::MouseInput</scope><name>_funct</name></member>
      <member refid="classspk_1_1MouseInput_1a7e74631b44207f9901caa61265640df4" prot="private" virt="virtual"><scope>spk::MouseInput</scope><name>_isExecutionNeeded</name></member>
      <member refid="classspk_1_1IInput_1a92ab93dccf24b9c0809cd141a4f975d2" prot="protected" virt="virtual"><scope>spk::MouseInput</scope><name>_skipCondition</name></member>
      <member refid="classspk_1_1IInput_1aca480f940165fae3fbad17182222b8b1" prot="protected" virt="non-virtual"><scope>spk::MouseInput</scope><name>_timer</name></member>
      <member refid="classspk_1_1IInput_1a0af00a3e86f07666cb3dc76518f2d496" prot="public" virt="non-virtual"><scope>spk::MouseInput</scope><name>IInput</name></member>
      <member refid="classspk_1_1MouseInput_1a85acfc45a8c08cddb3f4ff06e3db8db9" prot="public" virt="non-virtual"><scope>spk::MouseInput</scope><name>MouseInput</name></member>
      <member refid="classspk_1_1IInput_1a09e4d70d01debf1dcb5c4ce1d61a3139" prot="public" virt="virtual"><scope>spk::MouseInput</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
