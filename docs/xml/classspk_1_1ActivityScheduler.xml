<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classspk_1_1ActivityScheduler" kind="class" language="C++" prot="public">
    <compoundname>spk::ActivityScheduler</compoundname>
    <includes refid="spk__activity__scheduler_8hpp" local="no">spk_activity_scheduler.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspk_1_1ActivityScheduler_1a1c86511688ba473e040138dbdf595497" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classspk_1_1Activity" kindref="compound">Activity</ref> * &gt;</type>
        <definition>std::vector&lt;Activity*&gt; spk::ActivityScheduler::_activities</definition>
        <argsstring></argsstring>
        <name>_activities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_activity_scheduler.hpp" line="14" column="13" bodyfile="includes/design_pattern/spk_activity_scheduler.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspk_1_1ActivityScheduler_1ac3cb1398b125d743bef17982a0a7ccd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spk::ActivityScheduler::ActivityScheduler</definition>
        <argsstring>()</argsstring>
        <name>ActivityScheduler</name>
        <briefdescription>
<para>Construct a new <ref refid="classspk_1_1Activity" kindref="compound">Activity</ref> Scheduler object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_activity_scheduler.hpp" line="20" column="1" bodyfile="src/design_pattern/spk_activity_scheduler.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1ActivityScheduler_1a1467948112bbf2c38bbbaabac4a736ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::ActivityScheduler::addActivity</definition>
        <argsstring>(Activity *p_activity)</argsstring>
        <name>addActivity</name>
        <param>
          <type><ref refid="classspk_1_1Activity" kindref="compound">Activity</ref> *</type>
          <declname>p_activity</declname>
        </param>
        <briefdescription>
<para>Add an activity at the end of the schedule. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_activity</parametername>
</parameternamelist>
<parameterdescription>
<para>The activity to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_activity_scheduler.hpp" line="26" column="6" bodyfile="src/design_pattern/spk_activity_scheduler.cpp" bodystart="10" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1ActivityScheduler_1a5932655a97e9c53ef47d5752c63276eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::ActivityScheduler::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
<para>Start activities one after each other until each one are complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_activity_scheduler.hpp" line="31" column="6" bodyfile="src/design_pattern/spk_activity_scheduler.cpp" bodystart="16" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows activitee to follow each other. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="includes/design_pattern/spk_activity_scheduler.hpp" line="11" column="1" bodyfile="includes/design_pattern/spk_activity_scheduler.hpp" bodystart="12" bodyend="32"/>
    <listofallmembers>
      <member refid="classspk_1_1ActivityScheduler_1a1c86511688ba473e040138dbdf595497" prot="private" virt="non-virtual"><scope>spk::ActivityScheduler</scope><name>_activities</name></member>
      <member refid="classspk_1_1ActivityScheduler_1ac3cb1398b125d743bef17982a0a7ccd7" prot="public" virt="non-virtual"><scope>spk::ActivityScheduler</scope><name>ActivityScheduler</name></member>
      <member refid="classspk_1_1ActivityScheduler_1a1467948112bbf2c38bbbaabac4a736ad" prot="public" virt="non-virtual"><scope>spk::ActivityScheduler</scope><name>addActivity</name></member>
      <member refid="classspk_1_1ActivityScheduler_1a5932655a97e9c53ef47d5752c63276eb" prot="public" virt="non-virtual"><scope>spk::ActivityScheduler</scope><name>execute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
