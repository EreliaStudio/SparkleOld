<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classspk_1_1Value" kind="class" language="C++" prot="public">
    <compoundname>spk::Value</compoundname>
    <basecompoundref refid="classspk_1_1ContractProvider" prot="public" virt="non-virtual">spk::ContractProvider</basecompoundref>
    <includes refid="spk__value_8hpp" local="no">spk_value.hpp</includes>
    <innerclass refid="classspk_1_1Value_1_1Default" prot="public">spk::Value::Default</innerclass>
    <templateparamlist>
      <param>
        <type>typename TType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classspk_1_1Value_1a0e4af9f6282cd72766cbd8ea0e50be0a" prot="private" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <enumvalue id="classspk_1_1Value_1a0e4af9f6282cd72766cbd8ea0e50be0aa7a1920d61156abc05a60135aefe8bc67" prot="private">
          <name>Default</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classspk_1_1Value_1a0e4af9f6282cd72766cbd8ea0e50be0aa90589c47f06eb971d548591f23c285af" prot="private">
          <name>Custom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="163" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classspk_1_1Value_1a9d23152919feb755a9c33b187c5e19a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Default</definition>
        <argsstring></argsstring>
        <name>Default</name>
        <param>
          <type><ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="22" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspk_1_1Value_1a2bba400f219ce928e9b8ea5e1e86dc39" prot="private" static="no" mutable="no">
        <type><ref refid="classspk_1_1ContractProvider_1a8ad7ce7f08974f54c4168b30fe3d7d21" kindref="member">CallbackContainer</ref></type>
        <definition>CallbackContainer spk::Value&lt; TType &gt;::_onEditionCallbacks</definition>
        <argsstring></argsstring>
        <name>_onEditionCallbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The callbacks to trigger when the value is edited. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="169" column="27" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Value_1ab41d605a3ea535ff705e9717100bb9c1" prot="private" static="no" mutable="no">
        <type>State</type>
        <definition>State spk::Value&lt; TType &gt;::_state</definition>
        <argsstring></argsstring>
        <name>_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The state of the value (<ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> or Custom). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="170" column="15" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Value_1a7d1fa77508b780154a8b56bcf3d60e65" prot="private" static="no" mutable="no">
        <type><ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> *</type>
        <definition>Default* spk::Value&lt; TType &gt;::_default</definition>
        <argsstring></argsstring>
        <name>_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="171" column="17" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Value_1adca1665f60d07c6718e65395410245f7" prot="private" static="no" mutable="no">
        <type>TType</type>
        <definition>TType spk::Value&lt; TType &gt;::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The value in the custom state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="172" column="15" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspk_1_1Value_1af8e0c5f3ff17beebc946f4213c4eb3d1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Value&lt; TType &gt;::_triggerEditionCallback</definition>
        <argsstring>()</argsstring>
        <name>_triggerEditionCallback</name>
        <briefdescription>
<para>Trigger edition callbacks for subscribers. </para>
        </briefdescription>
        <detaileddescription>
<para>This function triggers the edition callbacks for all the subscribers of the value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="180" column="14" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="180" bodyend="186"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspk_1_1Value_1ae475f49d3b040f3ab54fad2691911017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Value&lt; TType &gt;::Value</definition>
        <argsstring>(const Default &amp;p_defaultValue)</argsstring>
        <name>Value</name>
        <param>
          <type>const <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> &amp;</type>
          <declname>p_defaultValue</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object with a given default value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value for the <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="194" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1a45888c18d70fcb13b307b3cee2021f6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>spk::Value&lt; TType &gt;::Value</definition>
        <argsstring>(const Default &amp;p_defaultValue, Args &amp;&amp;... p_args)</argsstring>
        <name>Value</name>
        <param>
          <type>const <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> &amp;</type>
          <declname>p_defaultValue</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>p_args</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object with a given default value and custom arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>The types of the arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value for the <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_args</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments to initialize the value in the custom state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="210" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="210" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1a463fe62884231cf5c714fbf690915238" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Value&lt; TType &gt;::Value</definition>
        <argsstring>(const Value &amp;p_other)</argsstring>
        <name>Value</name>
        <param>
          <type>const <ref refid="classspk_1_1Value" kindref="compound">Value</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
<para>Copy constructor for the <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="223" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="223" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1aaa7cba049f4a6f3071889d5f3c7f3024" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Value&lt; TType &gt;::~Value</definition>
        <argsstring>()</argsstring>
        <name>~Value</name>
        <briefdescription>
<para>Destructor for the <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="234" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1af4d9e5bf126982fdf0643120d6bc353e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classspk_1_1ContractProvider_1_1Contract" kindref="compound">Contract</ref></type>
        <definition>Contract spk::Value&lt; TType &gt;::subscribe</definition>
        <argsstring>(const Callback &amp;p_callback)</argsstring>
        <name>subscribe</name>
        <param>
          <type>const <ref refid="classspk_1_1ContractProvider_1a3ac086eee3bcd57992944a3d146eca1f" kindref="member">Callback</ref> &amp;</type>
          <declname>p_callback</declname>
        </param>
        <briefdescription>
<para>Subscribe to the value for edition callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This function subscribes a callback to the value for edition callbacks.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to subscribe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Contract object representing the subscription. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="247" column="18" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1a6856d8744fb79f29cd1a004b32818ecf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Value&lt; TType &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the value to the default state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function resets the value to the default state and triggers the edition callbacks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="257" column="14" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1a81e20cb2c4acaf4e274855c57148afa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Value&lt; TType &gt;::setDefaultValue</definition>
        <argsstring>(const Default &amp;p_defaultValue)</argsstring>
        <name>setDefaultValue</name>
        <param>
          <type>const <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> &amp;</type>
          <declname>p_defaultValue</declname>
        </param>
        <briefdescription>
<para>Set the default value for the <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the default value for the <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object and subscribes/unsubscribes from the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object as necessary.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The new default value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="271" column="14" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="271" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1a3ad908815c627f2b2fee96f5ce40ed32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classspk_1_1Value" kindref="compound">Value</ref> &amp;</type>
        <definition>Value&amp; spk::Value&lt; TType &gt;::operator=</definition>
        <argsstring>(const Value &amp;p_other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classspk_1_1Value" kindref="compound">Value</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator for the <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator copies the default value and the custom value from another <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object and triggers the edition callbacks.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the updated <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="291" column="15" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="291" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1a169179d9efc16fe961c246bfe8c567e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classspk_1_1Value" kindref="compound">Value</ref> &amp;</type>
        <definition>Value&amp; spk::Value&lt; TType &gt;::operator=</definition>
        <argsstring>(const TType &amp;p_newValue)</argsstring>
        <name>operator=</name>
        <param>
          <type>const TType &amp;</type>
          <declname>p_newValue</declname>
        </param>
        <briefdescription>
<para>Assignment operator for setting the value in the custom state. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator sets the value in the custom state and triggers the edition callbacks.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the updated <ref refid="classspk_1_1Value" kindref="compound">Value</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="309" column="15" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="309" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1a57308f762d52732980709a4627285e3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Value&lt; TType &gt;::operator const TType &amp;</definition>
        <argsstring>() const</argsstring>
        <name>operator const TType &amp;</name>
        <briefdescription>
<para>Conversion operator for accessing the value. </para>
        </briefdescription>
        <detaileddescription>
<para>This conversion operator allows accessing the value as a constant reference. If the value is in the custom state, it returns the custom value; otherwise, it returns the default value.</para>
<para><simplesect kind="return"><para>A constant reference to the value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="326" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="326" bodyend="332"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class template for managing a value with default and custom states. </para>
    </briefdescription>
    <detaileddescription>
<para>This class template represents a value that can have a default state and a custom state. The default state is managed by the inner class <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref>, and the custom state is managed by the template itself. The value can be subscribed to and notifies its subscribers when it is edited through callbacks.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>spk::ContractProvider</label>
        <link refid="classspk_1_1ContractProvider"/>
      </node>
      <node id="1">
        <label>spk::Value&lt; TType &gt;</label>
        <link refid="classspk_1_1Value"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>spk::ContractProvider</label>
        <link refid="classspk_1_1ContractProvider"/>
      </node>
      <node id="1">
        <label>spk::Value&lt; TType &gt;</label>
        <link refid="classspk_1_1Value"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="includes/design_pattern/spk_value.hpp" line="20" column="5" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="21" bodyend="333"/>
    <listofallmembers>
      <member refid="classspk_1_1Value_1a7d1fa77508b780154a8b56bcf3d60e65" prot="private" virt="non-virtual"><scope>spk::Value</scope><name>_default</name></member>
      <member refid="classspk_1_1Value_1a2bba400f219ce928e9b8ea5e1e86dc39" prot="private" virt="non-virtual"><scope>spk::Value</scope><name>_onEditionCallbacks</name></member>
      <member refid="classspk_1_1Value_1ab41d605a3ea535ff705e9717100bb9c1" prot="private" virt="non-virtual"><scope>spk::Value</scope><name>_state</name></member>
      <member refid="classspk_1_1Value_1af8e0c5f3ff17beebc946f4213c4eb3d1" prot="private" virt="non-virtual"><scope>spk::Value</scope><name>_triggerEditionCallback</name></member>
      <member refid="classspk_1_1Value_1adca1665f60d07c6718e65395410245f7" prot="private" virt="non-virtual"><scope>spk::Value</scope><name>_value</name></member>
      <member refid="classspk_1_1ContractProvider_1a3ac086eee3bcd57992944a3d146eca1f" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>Callback</name></member>
      <member refid="classspk_1_1ContractProvider_1a8ad7ce7f08974f54c4168b30fe3d7d21" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>CallbackContainer</name></member>
      <member refid="classspk_1_1Value_1a9d23152919feb755a9c33b187c5e19a2" prot="private" virt="non-virtual"><scope>spk::Value</scope><name>Default</name></member>
      <member refid="classspk_1_1Value_1a57308f762d52732980709a4627285e3f" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>operator const TType &amp;</name></member>
      <member refid="classspk_1_1Value_1a3ad908815c627f2b2fee96f5ce40ed32" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>operator=</name></member>
      <member refid="classspk_1_1Value_1a169179d9efc16fe961c246bfe8c567e6" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>operator=</name></member>
      <member refid="classspk_1_1Value_1a6856d8744fb79f29cd1a004b32818ecf" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>reset</name></member>
      <member refid="classspk_1_1Value_1a81e20cb2c4acaf4e274855c57148afa6" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>setDefaultValue</name></member>
      <member refid="classspk_1_1Value_1a0e4af9f6282cd72766cbd8ea0e50be0a" prot="private" virt="non-virtual"><scope>spk::Value</scope><name>State</name></member>
      <member refid="classspk_1_1Value_1af4d9e5bf126982fdf0643120d6bc353e" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>subscribe</name></member>
      <member refid="classspk_1_1ContractProvider_1a20a4093dd5ca766f2cb8bdf9e0bf0c25" prot="protected" virt="non-virtual" ambiguityscope="spk::ContractProvider::"><scope>spk::Value</scope><name>subscribe</name></member>
      <member refid="classspk_1_1Value_1ae475f49d3b040f3ab54fad2691911017" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>Value</name></member>
      <member refid="classspk_1_1Value_1a45888c18d70fcb13b307b3cee2021f6e" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>Value</name></member>
      <member refid="classspk_1_1Value_1a463fe62884231cf5c714fbf690915238" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>Value</name></member>
      <member refid="classspk_1_1Value_1aaa7cba049f4a6f3071889d5f3c7f3024" prot="public" virt="non-virtual"><scope>spk::Value</scope><name>~Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
