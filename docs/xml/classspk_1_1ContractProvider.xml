<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classspk_1_1ContractProvider" kind="class" language="C++" prot="public">
    <compoundname>spk::ContractProvider</compoundname>
    <derivedcompoundref refid="classspk_1_1StatedObject" prot="public" virt="non-virtual">spk::StatedObject&lt; bool &gt;</derivedcompoundref>
    <derivedcompoundref refid="classspk_1_1AbstractApplication" prot="public" virt="non-virtual">spk::AbstractApplication</derivedcompoundref>
    <derivedcompoundref refid="classspk_1_1Observer" prot="public" virt="non-virtual">spk::Observer&lt; TEvent &gt;</derivedcompoundref>
    <derivedcompoundref refid="classspk_1_1PersistentWorker" prot="public" virt="non-virtual">spk::PersistentWorker</derivedcompoundref>
    <derivedcompoundref refid="classspk_1_1Promise" prot="public" virt="non-virtual">spk::Promise&lt; TType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classspk_1_1StatedObject" prot="public" virt="non-virtual">spk::StatedObject&lt; TState &gt;</derivedcompoundref>
    <derivedcompoundref refid="classspk_1_1Value" prot="public" virt="non-virtual">spk::Value&lt; TType &gt;</derivedcompoundref>
    <includes refid="spk__contract__provider_8hpp" local="no">spk_contract_provider.hpp</includes>
    <innerclass refid="classspk_1_1ContractProvider_1_1Contract" prot="public">spk::ContractProvider::Contract</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classspk_1_1ContractProvider_1a3ac086eee3bcd57992944a3d146eca1f" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using spk::ContractProvider::Callback =  std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>Callback</name>
        <briefdescription>
<para>Type of data representing a callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_contract_provider.hpp" line="17" column="1" bodyfile="includes/design_pattern/spk_contract_provider.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspk_1_1ContractProvider_1a8ad7ce7f08974f54c4168b30fe3d7d21" prot="public" static="no">
        <type>std::deque&lt; <ref refid="classspk_1_1ContractProvider_1a3ac086eee3bcd57992944a3d146eca1f" kindref="member">Callback</ref> &gt;</type>
        <definition>using spk::ContractProvider::CallbackContainer =  std::deque&lt;Callback&gt;</definition>
        <argsstring></argsstring>
        <name>CallbackContainer</name>
        <briefdescription>
<para>Type of container for storing callback functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_contract_provider.hpp" line="18" column="1" bodyfile="includes/design_pattern/spk_contract_provider.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classspk_1_1ContractProvider_1a20a4093dd5ca766f2cb8bdf9e0bf0c25" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspk_1_1ContractProvider_1_1Contract" kindref="compound">Contract</ref></type>
        <definition>ContractProvider::Contract spk::ContractProvider::subscribe</definition>
        <argsstring>(CallbackContainer &amp;p_callbackOwner, const Callback &amp;p_callback)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classspk_1_1ContractProvider_1a8ad7ce7f08974f54c4168b30fe3d7d21" kindref="member">CallbackContainer</ref> &amp;</type>
          <declname>p_callbackOwner</declname>
        </param>
        <param>
          <type>const <ref refid="classspk_1_1ContractProvider_1a3ac086eee3bcd57992944a3d146eca1f" kindref="member">Callback</ref> &amp;</type>
          <declname>p_callback</declname>
        </param>
        <briefdescription>
<para>Add the callback inside the container and create a <ref refid="classspk_1_1ContractProvider_1_1Contract" kindref="compound">Contract</ref> representing it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_callbackOwner</parametername>
</parameternamelist>
<parameterdescription>
<para>The container that store the Callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to register in the <ref refid="classspk_1_1ContractProvider_1_1Contract" kindref="compound">Contract</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classspk_1_1ContractProvider_1_1Contract" kindref="compound">Contract</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_contract_provider.hpp" line="100" column="10" bodyfile="src/design_pattern/spk_contract_provider.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Construct a <ref refid="classspk_1_1ContractProvider_1_1Contract" kindref="compound">Contract</ref> with a callback function and a callbackContainer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>spk::Observer&lt; TEvent &gt;</label>
        <link refid="classspk_1_1Observer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>spk::StatedObject&lt; TState &gt;</label>
        <link refid="classspk_1_1StatedObject"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>spk::AbstractWidget</label>
        <link refid="classspk_1_1AbstractWidget"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>spk::StatedObject&lt; bool &gt;</label>
        <link refid="classspk_1_1StatedObject"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>spk::AbstractApplication</label>
        <link refid="classspk_1_1AbstractApplication"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>spk::NoGraphicsWidget</label>
        <link refid="classspk_1_1NoGraphicsWidget"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>spk::ContractProvider</label>
        <link refid="classspk_1_1ContractProvider"/>
      </node>
      <node id="11">
        <label>spk::Promise&lt; TType &gt;</label>
        <link refid="classspk_1_1Promise"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>spk::Application</label>
        <link refid="classspk_1_1Application"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>spk::PersistentWorker</label>
        <link refid="classspk_1_1PersistentWorker"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>spk::OnlyGraphicsWidget</label>
        <link refid="classspk_1_1OnlyGraphicsWidget"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>spk::ActivableObject</label>
        <link refid="classspk_1_1ActivableObject"/>
        <childnode refid="2" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>spk::Value&lt; TType &gt;</label>
        <link refid="classspk_1_1Value"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="includes/design_pattern/spk_contract_provider.hpp" line="14" column="1" bodyfile="includes/design_pattern/spk_contract_provider.hpp" bodystart="15" bodyend="101"/>
    <listofallmembers>
      <member refid="classspk_1_1ContractProvider_1a3ac086eee3bcd57992944a3d146eca1f" prot="public" virt="non-virtual"><scope>spk::ContractProvider</scope><name>Callback</name></member>
      <member refid="classspk_1_1ContractProvider_1a8ad7ce7f08974f54c4168b30fe3d7d21" prot="public" virt="non-virtual"><scope>spk::ContractProvider</scope><name>CallbackContainer</name></member>
      <member refid="classspk_1_1ContractProvider_1a20a4093dd5ca766f2cb8bdf9e0bf0c25" prot="protected" virt="non-virtual"><scope>spk::ContractProvider</scope><name>subscribe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
