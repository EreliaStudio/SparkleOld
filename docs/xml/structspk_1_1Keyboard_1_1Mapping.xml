<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structspk_1_1Keyboard_1_1Mapping" kind="struct" language="C++" prot="private">
    <compoundname>spk::Keyboard::Mapping</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structspk_1_1Keyboard_1_1Mapping_1a862d7e2ab5556a56af7020c33db5c14a" prot="public" static="no" mutable="no">
        <type><ref refid="classspk_1_1Keyboard_1a13a0bee8478b4e4e8162d4f389134b28" kindref="member">Key</ref></type>
        <definition>Key spk::Keyboard::Mapping::keys[Key::SIZE]</definition>
        <argsstring>[Key::SIZE]</argsstring>
        <name>keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_keyboard.hpp" line="100" column="5" bodyfile="includes/input/spk_keyboard.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structspk_1_1Keyboard_1_1Mapping_1ac7348453dd42feef1ba1b2b08dae0d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spk::Keyboard::Mapping::Mapping</definition>
        <argsstring>()</argsstring>
        <name>Mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_keyboard.hpp" line="102" column="1" bodyfile="src/input/spk_keyboard.cpp" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structspk_1_1Keyboard_1_1Mapping_1a44e3b474954aba047c7aa75729abdebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Keyboard::Mapping::bindKey</definition>
        <argsstring>(const size_t &amp;p_index, const Key &amp;p_key)</argsstring>
        <name>bindKey</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>p_index</declname>
        </param>
        <param>
          <type>const <ref refid="classspk_1_1Keyboard_1a13a0bee8478b4e4e8162d4f389134b28" kindref="member">Key</ref> &amp;</type>
          <declname>p_key</declname>
        </param>
        <briefdescription>
<para>Binds a key to an index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to bind the key to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to bind. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_keyboard.hpp" line="108" column="6" bodyfile="src/input/spk_keyboard.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structspk_1_1Keyboard_1_1Mapping_1a45921c1c980f2a4a84e1587c8fcc9823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspk_1_1Keyboard_1a13a0bee8478b4e4e8162d4f389134b28" kindref="member">Key</ref> &amp;</type>
        <definition>Keyboard::Key &amp; spk::Keyboard::Mapping::operator[]</definition>
        <argsstring>(const size_t &amp;p_index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>p_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_keyboard.hpp" line="109" column="5" bodyfile="src/input/spk_keyboard.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structspk_1_1Keyboard_1_1Mapping_1aa17569de8d92568e5dce575837951cc9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Mapping</type>
        <definition>Keyboard::Mapping spk::Keyboard::Mapping::createAzertyMapping</definition>
        <argsstring>()</argsstring>
        <name>createAzertyMapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_keyboard.hpp" line="111" column="16" bodyfile="src/input/linux/spk_keyboard.cpp" bodystart="5" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="structspk_1_1Keyboard_1_1Mapping_1a4d7860015036f2b1792815e440f28c96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Mapping</type>
        <definition>Keyboard::Mapping spk::Keyboard::Mapping::createQwertyMapping</definition>
        <argsstring>()</argsstring>
        <name>createQwertyMapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/input/spk_keyboard.hpp" line="112" column="16" bodyfile="src/input/linux/spk_keyboard.cpp" bodystart="14" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure to handle key mappings. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure handles key bindings for specific layouts. </para>
    </detaileddescription>
    <location file="includes/input/spk_keyboard.hpp" line="98" column="1" bodyfile="includes/input/spk_keyboard.hpp" bodystart="99" bodyend="113"/>
    <listofallmembers>
      <member refid="structspk_1_1Keyboard_1_1Mapping_1a44e3b474954aba047c7aa75729abdebd" prot="public" virt="non-virtual"><scope>spk::Keyboard::Mapping</scope><name>bindKey</name></member>
      <member refid="structspk_1_1Keyboard_1_1Mapping_1aa17569de8d92568e5dce575837951cc9" prot="public" virt="non-virtual"><scope>spk::Keyboard::Mapping</scope><name>createAzertyMapping</name></member>
      <member refid="structspk_1_1Keyboard_1_1Mapping_1a4d7860015036f2b1792815e440f28c96" prot="public" virt="non-virtual"><scope>spk::Keyboard::Mapping</scope><name>createQwertyMapping</name></member>
      <member refid="structspk_1_1Keyboard_1_1Mapping_1a862d7e2ab5556a56af7020c33db5c14a" prot="public" virt="non-virtual"><scope>spk::Keyboard::Mapping</scope><name>keys</name></member>
      <member refid="structspk_1_1Keyboard_1_1Mapping_1ac7348453dd42feef1ba1b2b08dae0d3c" prot="public" virt="non-virtual"><scope>spk::Keyboard::Mapping</scope><name>Mapping</name></member>
      <member refid="structspk_1_1Keyboard_1_1Mapping_1a45921c1c980f2a4a84e1587c8fcc9823" prot="public" virt="non-virtual"><scope>spk::Keyboard::Mapping</scope><name>operator[]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
