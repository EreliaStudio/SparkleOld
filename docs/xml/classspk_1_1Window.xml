<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classspk_1_1Window" kind="class" language="C++" prot="public">
    <compoundname>spk::Window</compoundname>
    <basecompoundref refid="classspk_1_1Singleton" prot="public" virt="non-virtual">spk::Singleton&lt; Window &gt;</basecompoundref>
    <basecompoundref refid="classspk_1_1Singleton" prot="public" virt="non-virtual">spk::Singleton&lt; Window &gt;</basecompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classspk_1_1Window_1ab0c04c85c44c58fbf9300b04bee7a60f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class spk::Singleton&lt; Window &gt;</definition>
        <argsstring></argsstring>
        <name>spk::Singleton&lt; Window &gt;</name>
        <param>
          <type><ref refid="classspk_1_1Singleton" kindref="compound">spk::Singleton</ref>&lt; <ref refid="classspk_1_1Window" kindref="compound">Window</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="1" column="0" bodyfile="includes/graphics/linux/spk_window.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classspk_1_1Window_1a0ac877ae35338497097509c6f090e025" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>APIModule</definition>
        <argsstring></argsstring>
        <name>APIModule</name>
        <param>
          <type><ref refid="classspk_1_1APIModule" kindref="compound">APIModule</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="12" column="1" bodyfile="includes/graphics/linux/spk_window.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspk_1_1Window_1a5d08731ffbb4270f89cc5cfca1e88a29" prot="private" static="no" mutable="no">
        <type><ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref></type>
        <definition>spk::Vector2Int spk::Window::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="15" column="17" bodyfile="includes/graphics/linux/spk_window.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1a349f929462632f471edd07201cc9204a" prot="private" static="no" mutable="no">
        <type>xcb_connection_t *</type>
        <definition>xcb_connection_t* spk::Window::_connection</definition>
        <argsstring></argsstring>
        <name>_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="17" column="18" bodyfile="includes/graphics/linux/spk_window.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1a4723538b161e315215352307e09d900b" prot="private" static="no" mutable="no">
        <type>xcb_screen_t *</type>
        <definition>xcb_screen_t* spk::Window::_screen</definition>
        <argsstring></argsstring>
        <name>_screen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="18" column="14" bodyfile="includes/graphics/linux/spk_window.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1a30cfafb32f27345fdfd933f78653f9a0" prot="private" static="no" mutable="no">
        <type>xcb_window_t</type>
        <definition>xcb_window_t spk::Window::_window</definition>
        <argsstring></argsstring>
        <name>_window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="19" column="14" bodyfile="includes/graphics/linux/spk_window.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1a7d5c0b3f647f72f1c897b691ea547911" prot="private" static="no" mutable="no">
        <type>wchar_t *</type>
        <definition>wchar_t* spk::Window::_convertedTitle</definition>
        <argsstring></argsstring>
        <name>_convertedTitle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="17" column="9" bodyfile="includes/graphics/windows/spk_window.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1aaa9f7650f1da3127354243db1dace65a" prot="private" static="no" mutable="no">
        <type>HINSTANCE</type>
        <definition>HINSTANCE spk::Window::_hInstance</definition>
        <argsstring></argsstring>
        <name>_hInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="18" column="11" bodyfile="includes/graphics/windows/spk_window.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1a8a8e2f35c770061ed6745717af98bb4c" prot="private" static="no" mutable="no">
        <type>HWND</type>
        <definition>HWND spk::Window::_windowFrame</definition>
        <argsstring></argsstring>
        <name>_windowFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="19" column="6" bodyfile="includes/graphics/windows/spk_window.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1a07c419039c8cc2f68897155c7ba51d05" prot="private" static="no" mutable="no">
        <type>RECT</type>
        <definition>RECT spk::Window::_windowSize</definition>
        <argsstring></argsstring>
        <name>_windowSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="20" column="6" bodyfile="includes/graphics/windows/spk_window.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1af75449e0e450e3e591bfa45de67eb9f1" prot="private" static="no" mutable="no">
        <type>WNDCLASS</type>
        <definition>WNDCLASS spk::Window::_windowClass</definition>
        <argsstring></argsstring>
        <name>_windowClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="21" column="10" bodyfile="includes/graphics/windows/spk_window.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1aca8a27d1508e878ee1a7d605b4aa3800" prot="private" static="no" mutable="no">
        <type>DWORD</type>
        <definition>DWORD spk::Window::_windowStyle</definition>
        <argsstring></argsstring>
        <name>_windowStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="22" column="7" bodyfile="includes/graphics/windows/spk_window.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Window_1a60580314233389f3e1d0b1840d3c1279" prot="private" static="no" mutable="no">
        <type>DWORD</type>
        <definition>DWORD spk::Window::_windowExStyle</definition>
        <argsstring></argsstring>
        <name>_windowExStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="23" column="7" bodyfile="includes/graphics/windows/spk_window.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspk_1_1Window_1a75a7326b4cb6373483bfd28cd692cc19" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_createWindow</definition>
        <argsstring>()</argsstring>
        <name>_createWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="21" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a5651d26b4f55056b152527f7d3c0114c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_nameWindow</definition>
        <argsstring>(const std::wstring &amp;p_title)</argsstring>
        <name>_nameWindow</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>p_title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="22" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1aac32c004c4a7a636554524570763aa05" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spk::Window::Window</definition>
        <argsstring>(const std::wstring &amp;p_title, const spk::Vector2Int &amp;p_size)</argsstring>
        <name>Window</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>p_title</declname>
        </param>
        <param>
          <type>const <ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref> &amp;</type>
          <declname>p_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a694ec6233dd2d36927b76de31cfe253c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_convertTitle</definition>
        <argsstring>(const std::wstring &amp;p_title)</argsstring>
        <name>_convertTitle</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>p_title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="25" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a169896c2d7c72cd3a23fd75c5e395561" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_createGhostInstance</definition>
        <argsstring>()</argsstring>
        <name>_createGhostInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="26" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1ad04475106030d324cc106b0af3a7dd8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_registerWindowClass</definition>
        <argsstring>()</argsstring>
        <name>_registerWindowClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="27" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1aafbc42533f52eef527b8909b9dbdafcc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_createWindowFrame</definition>
        <argsstring>(void *p_APIModule, const spk::Vector2Int &amp;p_size)</argsstring>
        <name>_createWindowFrame</name>
        <param>
          <type>void *</type>
          <declname>p_APIModule</declname>
        </param>
        <param>
          <type>const <ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref> &amp;</type>
          <declname>p_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="28" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1ac824731b78fdc1d45ae6803b56c62a8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_composeOpenGLContext</definition>
        <argsstring>()</argsstring>
        <name>_composeOpenGLContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="29" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a8f79925aa80897f4e42d185fc3c1d93c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::_activateWindow</definition>
        <argsstring>()</argsstring>
        <name>_activateWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="30" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1ae05598f60b99a8ac2ba8861d745c56a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spk::Window::Window</definition>
        <argsstring>(const std::wstring &amp;p_title, const spk::Vector2Int &amp;p_size, void *p_ptr=nullptr)</argsstring>
        <name>Window</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>p_title</declname>
        </param>
        <param>
          <type>const <ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref> &amp;</type>
          <declname>p_size</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p_ptr</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="32" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspk_1_1Window_1a3576ce767e110b73023d76f9a436ff1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::setGeometry</definition>
        <argsstring>(const spk::Vector2Int &amp;p_size)</argsstring>
        <name>setGeometry</name>
        <param>
          <type>const <ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref> &amp;</type>
          <declname>p_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="27" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a5d8a542bf4aacdc0f49483c8dcbe8d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::resize</definition>
        <argsstring>(const spk::Vector2Int &amp;p_size)</argsstring>
        <name>resize</name>
        <param>
          <type>const <ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref> &amp;</type>
          <declname>p_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="28" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1ad04c6c9d3a12e8792eddf8a8a733bc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="29" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a43fad77a06224e751ef80ab7d0093282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/linux/spk_window.hpp" line="30" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1ad7b645ee1f79762e79d4c24a42b42cf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spk::Window::~Window</definition>
        <argsstring>()</argsstring>
        <name>~Window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a3576ce767e110b73023d76f9a436ff1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::setGeometry</definition>
        <argsstring>(const spk::Vector2Int &amp;p_size)</argsstring>
        <name>setGeometry</name>
        <param>
          <type>const <ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref> &amp;</type>
          <declname>p_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="36" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a5d8a542bf4aacdc0f49483c8dcbe8d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::resize</definition>
        <argsstring>(const spk::Vector2Int &amp;p_size)</argsstring>
        <name>resize</name>
        <param>
          <type>const <ref refid="structspk_1_1IVector2" kindref="compound">spk::Vector2Int</ref> &amp;</type>
          <declname>p_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="37" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1ad04c6c9d3a12e8792eddf8a8a733bc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="38" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Window_1a43fad77a06224e751ef80ab7d0093282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Window::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/graphics/windows/spk_window.hpp" line="39" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>spk::Window</label>
        <link refid="classspk_1_1Window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>spk::Singleton&lt; Window &gt;</label>
        <link refid="classspk_1_1Singleton"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>spk::Window</label>
        <link refid="classspk_1_1Window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>spk::Singleton&lt; Window &gt;</label>
        <link refid="classspk_1_1Singleton"/>
      </node>
    </collaborationgraph>
    <location file="includes/graphics/linux/spk_window.hpp" line="9" column="1" bodyfile="includes/graphics/linux/spk_window.hpp" bodystart="10" bodyend="31"/>
    <listofallmembers>
      <member refid="classspk_1_1Window_1a8f79925aa80897f4e42d185fc3c1d93c" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_activateWindow</name></member>
      <member refid="classspk_1_1Window_1ac824731b78fdc1d45ae6803b56c62a8f" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_composeOpenGLContext</name></member>
      <member refid="classspk_1_1Window_1a349f929462632f471edd07201cc9204a" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_connection</name></member>
      <member refid="classspk_1_1Window_1a7d5c0b3f647f72f1c897b691ea547911" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_convertedTitle</name></member>
      <member refid="classspk_1_1Window_1a694ec6233dd2d36927b76de31cfe253c" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_convertTitle</name></member>
      <member refid="classspk_1_1Window_1a169896c2d7c72cd3a23fd75c5e395561" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_createGhostInstance</name></member>
      <member refid="classspk_1_1Window_1a75a7326b4cb6373483bfd28cd692cc19" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_createWindow</name></member>
      <member refid="classspk_1_1Window_1aafbc42533f52eef527b8909b9dbdafcc" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_createWindowFrame</name></member>
      <member refid="classspk_1_1Window_1aaa9f7650f1da3127354243db1dace65a" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_hInstance</name></member>
      <member refid="classspk_1_1Singleton_1a745f66a5489929948d930a09156aec4c" prot="protected" virt="non-virtual"><scope>spk::Window</scope><name>_instance</name></member>
      <member refid="classspk_1_1Window_1a5651d26b4f55056b152527f7d3c0114c" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_nameWindow</name></member>
      <member refid="classspk_1_1Window_1ad04475106030d324cc106b0af3a7dd8f" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_registerWindowClass</name></member>
      <member refid="classspk_1_1Window_1a4723538b161e315215352307e09d900b" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_screen</name></member>
      <member refid="classspk_1_1Window_1a5d08731ffbb4270f89cc5cfca1e88a29" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_size</name></member>
      <member refid="classspk_1_1Window_1a30cfafb32f27345fdfd933f78653f9a0" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_window</name></member>
      <member refid="classspk_1_1Window_1af75449e0e450e3e591bfa45de67eb9f1" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_windowClass</name></member>
      <member refid="classspk_1_1Window_1a60580314233389f3e1d0b1840d3c1279" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_windowExStyle</name></member>
      <member refid="classspk_1_1Window_1a8a8e2f35c770061ed6745717af98bb4c" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_windowFrame</name></member>
      <member refid="classspk_1_1Window_1a07c419039c8cc2f68897155c7ba51d05" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_windowSize</name></member>
      <member refid="classspk_1_1Window_1aca8a27d1508e878ee1a7d605b4aa3800" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>_windowStyle</name></member>
      <member refid="classspk_1_1Window_1a0ac877ae35338497097509c6f090e025" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>APIModule</name></member>
      <member refid="classspk_1_1Window_1a43fad77a06224e751ef80ab7d0093282" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>clear</name></member>
      <member refid="classspk_1_1Window_1a43fad77a06224e751ef80ab7d0093282" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>clear</name></member>
      <member refid="classspk_1_1Singleton_1a5f56bedfe0791cc1cc09d34bb3be382c" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>instance</name></member>
      <member refid="classspk_1_1Singleton_1ab970838cbc825424436ad64613b20c12" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>instanciate</name></member>
      <member refid="classspk_1_1Singleton_1a0fd0698aa7eab7c2a5cfbf11a9ddfad1" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>release</name></member>
      <member refid="classspk_1_1Window_1ad04c6c9d3a12e8792eddf8a8a733bc70" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>render</name></member>
      <member refid="classspk_1_1Window_1ad04c6c9d3a12e8792eddf8a8a733bc70" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>render</name></member>
      <member refid="classspk_1_1Window_1a5d8a542bf4aacdc0f49483c8dcbe8d22" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>resize</name></member>
      <member refid="classspk_1_1Window_1a5d8a542bf4aacdc0f49483c8dcbe8d22" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>resize</name></member>
      <member refid="classspk_1_1Window_1a3576ce767e110b73023d76f9a436ff1e" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>setGeometry</name></member>
      <member refid="classspk_1_1Window_1a3576ce767e110b73023d76f9a436ff1e" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>setGeometry</name></member>
      <member refid="classspk_1_1Singleton_1a24d01aa8ba49475d195a492d724d43e1" prot="protected" virt="non-virtual"><scope>spk::Window</scope><name>Singleton</name></member>
      <member refid="classspk_1_1Window_1ab0c04c85c44c58fbf9300b04bee7a60f" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>spk::Singleton&lt; Window &gt;</name></member>
      <member refid="classspk_1_1Window_1aac32c004c4a7a636554524570763aa05" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>Window</name></member>
      <member refid="classspk_1_1Window_1ae05598f60b99a8ac2ba8861d745c56a1" prot="private" virt="non-virtual"><scope>spk::Window</scope><name>Window</name></member>
      <member refid="classspk_1_1Window_1ad7b645ee1f79762e79d4c24a42b42cf4" prot="public" virt="non-virtual"><scope>spk::Window</scope><name>~Window</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
