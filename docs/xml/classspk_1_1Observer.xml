<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classspk_1_1Observer" kind="class" language="C++" prot="public">
    <compoundname>spk::Observer</compoundname>
    <basecompoundref refid="classspk_1_1ContractProvider" prot="public" virt="non-virtual">spk::ContractProvider</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename TEvent</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspk_1_1Observer_1a894c190f1a705deb8a3b102594ea3627" prot="private" static="no" mutable="no">
        <type>std::map&lt; TEvent, CallbackContainer &gt;</type>
        <definition>std::map&lt;TEvent, CallbackContainer&gt; spk::Observer&lt; TEvent &gt;::_callbacks</definition>
        <argsstring></argsstring>
        <name>_callbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_observer.hpp" line="13" column="10" bodyfile="includes/design_pattern/spk_observer.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspk_1_1Observer_1a3cd7b9980e08c9d8a156b6f6c4b0c56c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Observer&lt; TEvent &gt;::Observer</definition>
        <argsstring>()</argsstring>
        <name>Observer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_observer.hpp" line="16" column="1" bodyfile="includes/design_pattern/spk_observer.hpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Observer_1a9d72f4a2515061bab4721fa640da5c3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classspk_1_1ContractProvider_1_1Contract" kindref="compound">Contract</ref></type>
        <definition>Contract spk::Observer&lt; TEvent &gt;::subscribe</definition>
        <argsstring>(TEvent p_event, const Callback &amp;p_callback)</argsstring>
        <name>subscribe</name>
        <param>
          <type>TEvent</type>
          <declname>p_event</declname>
        </param>
        <param>
          <type>const Callback &amp;</type>
          <declname>p_callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_observer.hpp" line="20" column="10" bodyfile="includes/design_pattern/spk_observer.hpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Observer_1add756ae632b22250c9153bbcda59218c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Observer&lt; TEvent &gt;::notify</definition>
        <argsstring>(TEvent p_event)</argsstring>
        <name>notify</name>
        <param>
          <type>TEvent</type>
          <declname>p_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_observer.hpp" line="27" column="6" bodyfile="includes/design_pattern/spk_observer.hpp" bodystart="27" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>spk::Observer&lt; TEvent &gt;</label>
        <link refid="classspk_1_1Observer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>spk::ContractProvider</label>
        <link refid="classspk_1_1ContractProvider"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>spk::Observer&lt; TEvent &gt;</label>
        <link refid="classspk_1_1Observer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>spk::ContractProvider</label>
        <link refid="classspk_1_1ContractProvider"/>
      </node>
    </collaborationgraph>
    <location file="includes/design_pattern/spk_observer.hpp" line="10" column="1" bodyfile="includes/design_pattern/spk_observer.hpp" bodystart="11" bodyend="36"/>
    <listofallmembers>
      <member refid="classspk_1_1Observer_1a894c190f1a705deb8a3b102594ea3627" prot="private" virt="non-virtual"><scope>spk::Observer</scope><name>_callbacks</name></member>
      <member refid="classspk_1_1ContractProvider_1a3ac086eee3bcd57992944a3d146eca1f" prot="public" virt="non-virtual"><scope>spk::Observer</scope><name>Callback</name></member>
      <member refid="classspk_1_1ContractProvider_1a8ad7ce7f08974f54c4168b30fe3d7d21" prot="public" virt="non-virtual"><scope>spk::Observer</scope><name>CallbackContainer</name></member>
      <member refid="classspk_1_1Observer_1add756ae632b22250c9153bbcda59218c" prot="public" virt="non-virtual"><scope>spk::Observer</scope><name>notify</name></member>
      <member refid="classspk_1_1Observer_1a3cd7b9980e08c9d8a156b6f6c4b0c56c" prot="public" virt="non-virtual"><scope>spk::Observer</scope><name>Observer</name></member>
      <member refid="classspk_1_1Observer_1a9d72f4a2515061bab4721fa640da5c3b" prot="public" virt="non-virtual"><scope>spk::Observer</scope><name>subscribe</name></member>
      <member refid="classspk_1_1ContractProvider_1afb4adba519929353876b0192ea9a8aee" prot="protected" virt="non-virtual" ambiguityscope="spk::ContractProvider::"><scope>spk::Observer</scope><name>subscribe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
