<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classspk_1_1Value_1_1Default" kind="class" language="C++" prot="public">
    <compoundname>spk::Value::Default</compoundname>
    <includes refid="spk__value_8hpp" local="no">spk_value.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classspk_1_1Value_1_1Default_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <param>
          <type><ref refid="classspk_1_1Value" kindref="compound">Value</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="33" column="13" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspk_1_1Value_1_1Default_1adfe1684a0c57faca907173774444105c" prot="private" static="no" mutable="no">
        <type>TType</type>
        <definition>TType spk::Value&lt; TType &gt;::Default::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The actual value in the default state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="36" column="19" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspk_1_1Value_1_1Default_1abde58d87ef887aa46a2ba06d11a1dcac" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classspk_1_1Value" kindref="compound">Value</ref>&lt; TType &gt; * &gt;</type>
        <definition>std::vector&lt;Value&lt;TType&gt;*&gt; spk::Value&lt; TType &gt;::Default::_subscribers</definition>
        <argsstring></argsstring>
        <name>_subscribers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The list of subscribers to the value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="37" column="25" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1ae998f457d7a9414b90877e287d654230" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Value&lt; TType &gt;::Default::subscribe</definition>
        <argsstring>(Value&lt; TType &gt; *p_subscriber)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classspk_1_1Value" kindref="compound">Value</ref>&lt; TType &gt; *</type>
          <declname>p_subscriber</declname>
        </param>
        <briefdescription>
<para>Subscribe to the value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function adds a subscriber to the list of subscribers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_subscriber</parametername>
</parameternamelist>
<parameterdescription>
<para>The subscriber to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="46" column="18" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1a749716cd84297d53b63e869be868bb2a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Value&lt; TType &gt;::Default::unsubscribe</definition>
        <argsstring>(Value&lt; TType &gt; *p_subscriber)</argsstring>
        <name>unsubscribe</name>
        <param>
          <type><ref refid="classspk_1_1Value" kindref="compound">Value</ref>&lt; TType &gt; *</type>
          <declname>p_subscriber</declname>
        </param>
        <briefdescription>
<para>Unsubscribe from the value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes a subscriber from the list of subscribers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_subscriber</parametername>
</parameternamelist>
<parameterdescription>
<para>The subscriber to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="58" column="18" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1aa69e53a6972acf628761d20829caf8d2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spk::Value&lt; TType &gt;::Default::_triggerSubscriberEditionCallbacks</definition>
        <argsstring>()</argsstring>
        <name>_triggerSubscriberEditionCallbacks</name>
        <briefdescription>
<para>Trigger edition callbacks for subscribers. </para>
        </briefdescription>
        <detaileddescription>
<para>This function triggers the edition callbacks for all the subscribers whose state is <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="69" column="18" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="69" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1ae9e4ae3a30832d143345ad35119e7528" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>spk::Value&lt; TType &gt;::Default::Default</definition>
        <argsstring>(Args &amp;&amp;... p_args)</argsstring>
        <name>Default</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>p_args</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object with a given initial value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>The types of the arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_args</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments to initialize the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="86" column="13" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1af08f2b7dccddde18f955ae8b7aebf64a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Value&lt; TType &gt;::Default::Default</definition>
        <argsstring>(const Default &amp;p_other)</argsstring>
        <name>Default</name>
        <param>
          <type>const <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
<para>Copy constructor for the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="98" column="13" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1a4b7002959d78f07b0ed64795cecfef68" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Value&lt; TType &gt;::Default::~Default</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>~Default</name>
        <briefdescription>
<para>Destructor for the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Throws a std::runtime_error if the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> value is still used by at least one <ref refid="classspk_1_1Value" kindref="compound">Value</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="110" column="13" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1a76f914d497757411cff7499ec53ba41d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> &amp;</type>
        <definition>Default&amp; spk::Value&lt; TType &gt;::Default::operator=</definition>
        <argsstring>(const TType &amp;p_newValue)</argsstring>
        <name>operator=</name>
        <param>
          <type>const TType &amp;</type>
          <declname>p_newValue</declname>
        </param>
        <briefdescription>
<para>Assignment operator for setting the value in the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> state. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator sets the value in the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> state and triggers the edition callbacks for the subscribers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the updated <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="125" column="21" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1a74711a987126d215a51581db6ee99679" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> &amp;</type>
        <definition>Default&amp; spk::Value&lt; TType &gt;::Default::operator=</definition>
        <argsstring>(const Default &amp;p_other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator for the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator copies the value from another <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object and triggers the edition callbacks for the subscribers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the updated <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="141" column="21" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classspk_1_1Value_1_1Default_1a17ae54c173cf86cf18bfb4881c0d2282" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spk::Value&lt; TType &gt;::Default::operator const TType &amp;</definition>
        <argsstring>() const</argsstring>
        <name>operator const TType &amp;</name>
        <briefdescription>
<para>Conversion operator for accessing the value in the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> state. </para>
        </briefdescription>
        <detaileddescription>
<para>This conversion operator allows accessing the value in the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> state as a constant reference.</para>
<para><simplesect kind="return"><para>A constant reference to the value in the <ref refid="classspk_1_1Value_1_1Default" kindref="compound">Default</ref> state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/design_pattern/spk_value.hpp" line="156" column="13" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="156" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The inner class for managing the default state of the value. </para>
    </briefdescription>
    <detaileddescription>
<para>This inner class represents the default state of the value. It holds the actual value, keeps track of subscribers, and triggers edition callbacks when the value is changed. </para>
    </detaileddescription>
    <location file="includes/design_pattern/spk_value.hpp" line="31" column="9" bodyfile="includes/design_pattern/spk_value.hpp" bodystart="32" bodyend="160"/>
    <listofallmembers>
      <member refid="classspk_1_1Value_1_1Default_1abde58d87ef887aa46a2ba06d11a1dcac" prot="private" virt="non-virtual"><scope>spk::Value::Default</scope><name>_subscribers</name></member>
      <member refid="classspk_1_1Value_1_1Default_1aa69e53a6972acf628761d20829caf8d2" prot="private" virt="non-virtual"><scope>spk::Value::Default</scope><name>_triggerSubscriberEditionCallbacks</name></member>
      <member refid="classspk_1_1Value_1_1Default_1adfe1684a0c57faca907173774444105c" prot="private" virt="non-virtual"><scope>spk::Value::Default</scope><name>_value</name></member>
      <member refid="classspk_1_1Value_1_1Default_1ae9e4ae3a30832d143345ad35119e7528" prot="public" virt="non-virtual"><scope>spk::Value::Default</scope><name>Default</name></member>
      <member refid="classspk_1_1Value_1_1Default_1af08f2b7dccddde18f955ae8b7aebf64a" prot="public" virt="non-virtual"><scope>spk::Value::Default</scope><name>Default</name></member>
      <member refid="classspk_1_1Value_1_1Default_1a17ae54c173cf86cf18bfb4881c0d2282" prot="public" virt="non-virtual"><scope>spk::Value::Default</scope><name>operator const TType &amp;</name></member>
      <member refid="classspk_1_1Value_1_1Default_1a76f914d497757411cff7499ec53ba41d" prot="public" virt="non-virtual"><scope>spk::Value::Default</scope><name>operator=</name></member>
      <member refid="classspk_1_1Value_1_1Default_1a74711a987126d215a51581db6ee99679" prot="public" virt="non-virtual"><scope>spk::Value::Default</scope><name>operator=</name></member>
      <member refid="classspk_1_1Value_1_1Default_1ae998f457d7a9414b90877e287d654230" prot="private" virt="non-virtual"><scope>spk::Value::Default</scope><name>subscribe</name></member>
      <member refid="classspk_1_1Value_1_1Default_1a749716cd84297d53b63e869be868bb2a" prot="private" virt="non-virtual"><scope>spk::Value::Default</scope><name>unsubscribe</name></member>
      <member refid="classspk_1_1Value_1_1Default_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" virt="non-virtual"><scope>spk::Value::Default</scope><name>Value</name></member>
      <member refid="classspk_1_1Value_1_1Default_1a4b7002959d78f07b0ed64795cecfef68" prot="public" virt="non-virtual"><scope>spk::Value::Default</scope><name>~Default</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
