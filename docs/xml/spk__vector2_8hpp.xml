<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="spk__vector2_8hpp" kind="file" language="C++">
    <compoundname>spk_vector2.hpp</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="linux_2spk__window__module_8hpp" local="yes">includes/application/modules/linux/spk_window_module.hpp</includedby>
    <includedby refid="windows_2spk__window__module_8hpp" local="yes">includes/application/modules/windows/spk_window_module.hpp</includedby>
    <includedby refid="linux_2spk__window_8hpp" local="yes">includes/graphics/linux/spk_window.hpp</includedby>
    <includedby refid="spk__window_8hpp" local="yes">includes/graphics/spk_window.hpp</includedby>
    <includedby refid="windows_2spk__window_8hpp" local="yes">includes/graphics/windows/spk_window.hpp</includedby>
    <includedby refid="spk__mouse_8hpp" local="yes">includes/input/spk_mouse.hpp</includedby>
    <includedby refid="spk__vector3_8hpp" local="yes">includes/math/spk_vector3.hpp</includedby>
    <includedby refid="sparkle_8hpp" local="yes">includes/sparkle.hpp</includedby>
    <includedby refid="spk__abstract__widget_8hpp" local="yes">includes/widget/spk_abstract_widget.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>includes/math/spk_vector2.hpp</label>
        <link refid="spk__vector2_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>includes/application/modules/spk_widget_module.hpp</label>
        <link refid="spk__widget__module_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>includes/widget/spk_abstract_widget.hpp</label>
        <link refid="spk__abstract__widget_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>includes/graphics/spk_window.hpp</label>
        <link refid="spk__window_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>includes/application/modules/windows/spk_window_module.hpp</label>
        <link refid="windows_2spk__window__module_8hpp_source"/>
      </node>
      <node id="6">
        <label>includes/sparkle.hpp</label>
        <link refid="sparkle_8hpp_source"/>
      </node>
      <node id="8">
        <label>includes/input/spk_mouse.hpp</label>
        <link refid="spk__mouse_8hpp_source"/>
      </node>
      <node id="2">
        <label>includes/application/modules/linux/spk_window_module.hpp</label>
        <link refid="linux_2spk__window__module_8hpp_source"/>
      </node>
      <node id="7">
        <label>includes/graphics/windows/spk_window.hpp</label>
        <link refid="windows_2spk__window_8hpp_source"/>
      </node>
      <node id="13">
        <label>includes/application/concrete/windows/spk_graphical_application.hpp</label>
        <link refid="windows_2spk__graphical__application_8hpp_source"/>
      </node>
      <node id="4">
        <label>includes/graphics/linux/spk_window.hpp</label>
        <link refid="linux_2spk__window_8hpp_source"/>
      </node>
      <node id="1">
        <label>includes/math/spk_vector2.hpp</label>
        <link refid="spk__vector2_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>includes/application/concrete/linux/spk_graphical_application.hpp</label>
        <link refid="linux_2spk__graphical__application_8hpp_source"/>
      </node>
      <node id="9">
        <label>includes/math/spk_vector3.hpp</label>
        <link refid="spk__vector3_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structspk_1_1IVector2_xC2_xB2" prot="public">spk::IVector2²</innerclass>
    <innernamespace refid="namespacespk">spk</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="spk__vector2_8hpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/math/spk_vector2.hpp" line="4" column="10" bodyfile="includes/math/spk_vector2.hpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spk__vector2_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/math/spk_vector2.hpp" line="9" column="9" bodyfile="includes/math/spk_vector2.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>_USE_MATH_DEFINES<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/>3.14159265358979323846</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">spk</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TType&gt;</highlight></codeline>
<codeline lineno="26" refid="structspk_1_1IVector2_xC2_xB2" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structspk_1_1IVector2_xC2_xB2" kindref="compound">IVector2²</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28" refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TType<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>;<sp/></highlight></codeline>
<codeline lineno="29" refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TType<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>;<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>()<sp/>:<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>(0),<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="43" refid="structspk_1_1IVector2_xC2_xB2_1a78121616069c4cd83e3fbd38a1c0889b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a78121616069c4cd83e3fbd38a1c0889b" kindref="member">IVector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOtherType&amp;<sp/>p_value)<sp/>:<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>(p_value),<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>(p_value)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="51" refid="structspk_1_1IVector2_xC2_xB2_1a83de0866ac6e2bf95ac1a54ef0980be2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a83de0866ac6e2bf95ac1a54ef0980be2" kindref="member">IVector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOtherType&amp;<sp/>p_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOtherType&amp;<sp/>p_y)<sp/>:<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>(p_x),<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>(p_y)<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="61" refid="structspk_1_1IVector2_xC2_xB2_1a09dac47fe453edc862f83c6bfb71d9b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TOtherType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TOtherType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>)));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structspk_1_1IVector2_xC2_xB2_1a0ad00eba4b802fae1acede9ef72d21bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::wostream&amp;<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a0ad00eba4b802fae1acede9ef72d21bd" kindref="member">operator &lt;&lt; </ref>(std::wostream&amp;<sp/>p_os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_self)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_os<sp/>&lt;&lt;<sp/>p_self.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p_self.y;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_os;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="88" refid="structspk_1_1IVector2_xC2_xB2_1a4054ee6296061dfc2e30849b6e0d3491" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a4054ee6296061dfc2e30849b6e0d3491" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="89"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>+<sp/>p_other.x,<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>+<sp/>p_other.y);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="101" refid="structspk_1_1IVector2_xC2_xB2_1a5c73195d9a1a05aa88892e88f9a40301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a5c73195d9a1a05aa88892e88f9a40301" kindref="member">operator - </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>-<sp/>p_other.x,<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>-<sp/>p_other.y);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="114" refid="structspk_1_1IVector2_xC2_xB2_1af6c510b54e2144f04907b55e23b5c8cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1af6c510b54e2144f04907b55e23b5c8cd" kindref="member">operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>*<sp/>p_other.x,<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>*<sp/>p_other.y));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="128" refid="structspk_1_1IVector2_xC2_xB2_1aa65574d8b991dd9a05ea1ac32fddb6f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1aa65574d8b991dd9a05ea1ac32fddb6f3" kindref="member">operator / </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="129"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_other.x<sp/>==<sp/>0<sp/>||<sp/>p_other.y<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>divide<sp/>by<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>/<sp/>p_other.x,<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>/<sp/>p_other.y));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="142" refid="structspk_1_1IVector2_xC2_xB2_1ab19215e3e2f31785931425b75dc3b95d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1ab19215e3e2f31785931425b75dc3b95d" kindref="member">operator += </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>+=<sp/>p_other.x;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>+=<sp/>p_other.y;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="155" refid="structspk_1_1IVector2_xC2_xB2_1ab38a1c1ba5a0f835576caa91dbf9d56b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1ab38a1c1ba5a0f835576caa91dbf9d56b" kindref="member">operator -= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>-=<sp/>p_other.x;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>-=<sp/>p_other.y;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="168" refid="structspk_1_1IVector2_xC2_xB2_1a26172d58485a5f827d9ae74da66ddcc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a26172d58485a5f827d9ae74da66ddcc6" kindref="member">operator *= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>*=<sp/>p_other.x;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>*=<sp/>p_other.y;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="182" refid="structspk_1_1IVector2_xC2_xB2_1a44eb9d8ab0f9d48a9c334733189998eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a44eb9d8ab0f9d48a9c334733189998eb" kindref="member">operator /= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_other.x<sp/>==<sp/>0<sp/>||<sp/>p_other.y<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>divide<sp/>by<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>/=<sp/>p_other.x;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>/=<sp/>p_other.y;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="197" refid="structspk_1_1IVector2_xC2_xB2_1afbe9d6943cbf382903b8e2a2667a140b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afbe9d6943cbf382903b8e2a2667a140b" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>delta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>==<sp/>delta.x<sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>==<sp/>delta.y);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="210" refid="structspk_1_1IVector2_xC2_xB2_1a672603f851980d5f2ab1f7d4c3a095b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a672603f851980d5f2ab1f7d4c3a095b5" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>delta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>!=<sp/>delta.x<sp/>||<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>!=<sp/>delta.y);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="223" refid="structspk_1_1IVector2_xC2_xB2_1ab2b784719aef4b76694dcc53eab25105" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1ab2b784719aef4b76694dcc53eab25105" kindref="member">operator &lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>&lt;<sp/>p_other.y)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>==<sp/>p_other.y<sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>&lt;<sp/>p_other.x)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="240" refid="structspk_1_1IVector2_xC2_xB2_1a110102bb0b3fb604ab9491b01c30b5c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a110102bb0b3fb604ab9491b01c30b5c1" kindref="member">operator &gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="241"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>&gt;<sp/>p_other.y)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>==<sp/>p_other.y<sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>&gt;<sp/>p_other.x)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="257" refid="structspk_1_1IVector2_xC2_xB2_1a0de2d12f0b178e5c0eb3facb5b928ea3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a0de2d12f0b178e5c0eb3facb5b928ea3" kindref="member">operator &lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="258"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>&lt;<sp/>p_other.y)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>==<sp/>p_other.y<sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>&lt;=<sp/>p_other.x)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="274" refid="structspk_1_1IVector2_xC2_xB2_1a43d0cad39c06dd4bcee668e16732718d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a43d0cad39c06dd4bcee668e16732718d" kindref="member">operator &gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="275"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>&gt;<sp/>p_other.y)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>==<sp/>p_other.y<sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>&gt;=<sp/>p_other.x)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>norm()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="284"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sqrt(pow(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>,<sp/>2.0f)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>pow(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>,<sp/>2.0f)));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="structspk_1_1IVector2_xC2_xB2_1a42a82569e87d1ee2b2f8bf5f91b73275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a42a82569e87d1ee2b2f8bf5f91b73275" kindref="member">norm</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="296"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sqrt(pow(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>,<sp/>2.0f)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>pow(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>,<sp/>2.0f)));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="310" refid="structspk_1_1IVector2_xC2_xB2_1a2aea226c63e5ad6b27173ddcf15018be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a2aea226c63e5ad6b27173ddcf15018be" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="311"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::sqrt(pow(p_other.x<sp/>-<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>,<sp/>2)<sp/>+<sp/>pow(p_other.y<sp/>-<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>,<sp/>2))));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="structspk_1_1IVector2_xC2_xB2_1a1407e6aecf160d856032db445ced6a55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;float&gt;</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a1407e6aecf160d856032db445ced6a55" kindref="member">normalize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="323"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tmp_norm;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_norm<sp/>=<sp/>this-&gt;norm();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_norm<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>divide<sp/>by<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;float&gt;</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>)<sp/>/<sp/>tmp_norm,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>)<sp/>/<sp/>tmp_norm));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="341" refid="structspk_1_1IVector2_xC2_xB2_1a0d2aee425ae7ca6462a7175e17340a29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a0d2aee425ae7ca6462a7175e17340a29" kindref="member">cross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other<sp/>=<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(0,<sp/>0))</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="342"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(-(p_other.y<sp/>-<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref>),<sp/>p_other.x<sp/>-<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="359" refid="structspk_1_1IVector2_xC2_xB2_1a290461ecc83d83b4109854e82e2b4bf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a290461ecc83d83b4109854e82e2b4bf9" kindref="member">crossZ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="360"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>*<sp/>p_other.y<sp/>-<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>*<sp/>p_other.x);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="374" refid="structspk_1_1IVector2_xC2_xB2_1a72b9086a584d16c606acc35aeec93849" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a72b9086a584d16c606acc35aeec93849" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_center<sp/>=<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(0,<sp/>0))</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="375"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>-<sp/>p_center.x)<sp/>*<sp/>(p_other.x<sp/>-<sp/>p_center.x)<sp/>+<sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>-<sp/>p_center.y)<sp/>*<sp/>(p_other.y<sp/>-<sp/>p_center.y);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="393" refid="structspk_1_1IVector2_xC2_xB2_1a9eaa121b93054a263517a9f541d5f288" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a9eaa121b93054a263517a9f541d5f288" kindref="member">angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_center<sp/>=<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(0,<sp/>0))</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="394"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rdot<sp/>=<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a72b9086a584d16c606acc35aeec93849" kindref="member">dot</ref>(p_other,<sp/>p_center);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdot<sp/>=<sp/>(rdot<sp/>&lt;<sp/>-1.0f<sp/>?<sp/>-1.0f<sp/>:<sp/>(rdot<sp/>&gt;<sp/>1.0f<sp/>?<sp/>1.0f<sp/>:<sp/>rdot));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a9eaa121b93054a263517a9f541d5f288" kindref="member">angle</ref><sp/>=<sp/>std::acos(rdot);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a9eaa121b93054a263517a9f541d5f288" kindref="member">angle</ref><sp/>*<sp/>(180<sp/>/<sp/>M_PI));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="structspk_1_1IVector2_xC2_xB2_1ae576c7e1772b9944668d9815e94d7ed2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1ae576c7e1772b9944668d9815e94d7ed2" kindref="member">invert</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="412"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>*<sp/>-1,<sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>*<sp/>-1));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="426" refid="structspk_1_1IVector2_xC2_xB2_1a3ef26893f9bd8f3d26c1cb0233e51a19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a3ef26893f9bd8f3d26c1cb0233e51a19" kindref="member">rotate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>&amp;<sp/>p_center,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>p_angle)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="427"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>p_angle<sp/>*<sp/>(M_PI<sp/>/<sp/>180);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pcos<sp/>=<sp/>cos(theta);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>psin<sp/>=<sp/>sin(theta);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.x<sp/>=<sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>-<sp/>p_center.x)<sp/>*<sp/>pcos<sp/>-<sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>-<sp/>p_center.y)<sp/>*<sp/>psin;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.y<sp/>=<sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1afb6eae684c5a81307ab094c42fa37b1b" kindref="member">x</ref><sp/>-<sp/>p_center.x)<sp/>*<sp/>psin<sp/>+<sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a808bf0b52e16bcf4f25fbba5e5db0aef" kindref="member">y</ref><sp/>-<sp/>p_center.y)<sp/>*<sp/>pcos;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result<sp/>+<sp/>p_center);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="structspk_1_1IVector2_xC2_xB2_1aa92e2b7834301d879ccfff0386504f4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1aa92e2b7834301d879ccfff0386504f4a" kindref="member">floor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_vector)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.x<sp/>=<sp/>::floorf(p_vector.x);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.y<sp/>=<sp/>::floorf(p_vector.y);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="structspk_1_1IVector2_xC2_xB2_1ad4da26dcde24353cc83510dfd05079d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1ad4da26dcde24353cc83510dfd05079d2" kindref="member">ceiling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_vector)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.x<sp/>=<sp/>::ceilf(p_vector.x);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.y<sp/>=<sp/>::ceilf(p_vector.y);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="structspk_1_1IVector2_xC2_xB2_1a900a737ad76b0b863284f7d6fc746dc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a900a737ad76b0b863284f7d6fc746dc0" kindref="member">round</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_vector)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.x<sp/>=<sp/>::roundf(p_vector.x);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.y<sp/>=<sp/>::roundf(p_vector.y);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="structspk_1_1IVector2_xC2_xB2_1a5378cc41007044a80a002d41bff00dcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a5378cc41007044a80a002d41bff00dcf" kindref="member">min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_max)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(std::min(p_min.x,<sp/>p_max.x),<sp/>std::min(p_min.y,<sp/>p_max.y)));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="structspk_1_1IVector2_xC2_xB2_1a685653d643c79b201b8345b72a7b57aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a685653d643c79b201b8345b72a7b57aa" kindref="member">max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_max)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(std::max(p_min.x,<sp/>p_max.x),<sp/>std::max(p_min.y,<sp/>p_max.y)));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="structspk_1_1IVector2_xC2_xB2_1a857b475bd31bd430ea0bd87b27d1dfa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a857b475bd31bd430ea0bd87b27d1dfa5" kindref="member">isInsideRectangle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_cornerA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_cornerB)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/>tmpMin<sp/>=<sp/>IVector2::min(p_cornerA,<sp/>p_cornerB);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/>tmpMax<sp/>=<sp/>IVector2::max(p_cornerA,<sp/>p_cornerB);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_point.x<sp/>&lt;<sp/>tmpMin.x<sp/>||<sp/>p_point.y<sp/>&lt;<sp/>tmpMin.y<sp/>||</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_point.x<sp/>&gt;<sp/>tmpMax.x<sp/>||<sp/>p_point.y<sp/>&gt;<sp/>tmpMax.y)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="structspk_1_1IVector2_xC2_xB2_1ac9c33875b9b908ce875911bd2eb3cd81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1ac9c33875b9b908ce875911bd2eb3cd81" kindref="member">lerp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_startingPoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2</ref>&amp;<sp/>p_endingPoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_xC2_xB2_1a87a1b4508c6ea62688f6623a92392ab2" kindref="member">IVector2</ref>(</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_startingPoint.x<sp/>+<sp/>(p_endingPoint.x<sp/>-<sp/>p_startingPoint.x)<sp/>*<sp/>t,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_startingPoint.y<sp/>+<sp/>(p_endingPoint.y<sp/>-<sp/>p_startingPoint.y)<sp/>*<sp/>t</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/>operator+(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>&amp;<sp/>p_point)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(p_value,<sp/>p_value)<sp/>+<sp/>p_point);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/>operator-(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>&amp;<sp/>p_point)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(p_value,<sp/>p_value)<sp/>-<sp/>p_point);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/>operator*(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>&amp;<sp/>p_point)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(p_value,<sp/>p_value)<sp/>*<sp/>p_point);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/>operator/(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>&amp;<sp/>p_point)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(p_value,<sp/>p_value)<sp/>/<sp/>p_point);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Vector2<sp/>=<sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;float&gt;</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Vector2Int<sp/>=<sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;int&gt;</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Vector2UInt<sp/>=<sp/><ref refid="classIVector2" kindref="compound">IVector2&lt;unsigned int&gt;</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="includes/math/spk_vector2.hpp"/>
  </compounddef>
</doxygen>
