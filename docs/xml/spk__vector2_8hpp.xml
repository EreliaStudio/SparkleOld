<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="spk__vector2_8hpp" kind="file" language="C++">
    <compoundname>spk_vector2.hpp</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="linux_2spk__window__module_8hpp" local="yes">includes/application/modules/linux/spk_window_module.hpp</includedby>
    <includedby refid="windows_2spk__window__module_8hpp" local="yes">includes/application/modules/windows/spk_window_module.hpp</includedby>
    <includedby refid="linux_2spk__window_8hpp" local="yes">includes/graphics/linux/spk_window.hpp</includedby>
    <includedby refid="spk__window_8hpp" local="yes">includes/graphics/spk_window.hpp</includedby>
    <includedby refid="windows_2spk__window_8hpp" local="yes">includes/graphics/windows/spk_window.hpp</includedby>
    <includedby refid="spk__mouse_8hpp" local="yes">includes/input/spk_mouse.hpp</includedby>
    <includedby refid="spk__vector3_8hpp" local="yes">includes/math/spk_vector3.hpp</includedby>
    <includedby refid="sparkle_8hpp" local="yes">includes/sparkle.hpp</includedby>
    <includedby refid="spk__abstract__widget_8hpp" local="yes">includes/widget/spk_abstract_widget.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>includes/math/spk_vector2.hpp</label>
        <link refid="spk__vector2_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>includes/widget/spk_abstract_widget.hpp</label>
        <link refid="spk__abstract__widget_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>includes/graphics/spk_window.hpp</label>
        <link refid="spk__window_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>playground/includes/playground.hpp</label>
        <link refid="playground_8hpp_source"/>
      </node>
      <node id="3">
        <label>includes/application/modules/windows/spk_window_module.hpp</label>
        <link refid="windows_2spk__window__module_8hpp_source"/>
      </node>
      <node id="6">
        <label>includes/sparkle.hpp</label>
        <link refid="sparkle_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>includes/input/spk_mouse.hpp</label>
        <link refid="spk__mouse_8hpp_source"/>
      </node>
      <node id="2">
        <label>includes/application/modules/linux/spk_window_module.hpp</label>
        <link refid="linux_2spk__window__module_8hpp_source"/>
      </node>
      <node id="8">
        <label>includes/graphics/windows/spk_window.hpp</label>
        <link refid="windows_2spk__window_8hpp_source"/>
      </node>
      <node id="4">
        <label>includes/graphics/linux/spk_window.hpp</label>
        <link refid="linux_2spk__window_8hpp_source"/>
      </node>
      <node id="1">
        <label>includes/math/spk_vector2.hpp</label>
        <link refid="spk__vector2_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>includes/widget/spk_widget_atlas.hpp</label>
        <link refid="spk__widget__atlas_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>includes/math/spk_vector3.hpp</label>
        <link refid="spk__vector3_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structspk_1_1IVector2" prot="public">spk::IVector2</innerclass>
    <innernamespace refid="namespacespk">spk</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="spk__vector2_8hpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/math/spk_vector2.hpp" line="4" column="9" bodyfile="includes/math/spk_vector2.hpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spk__vector2_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/math/spk_vector2.hpp" line="9" column="9" bodyfile="includes/math/spk_vector2.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/>3.14159265358979323846</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">spk</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TType&gt;</highlight></codeline>
<codeline lineno="26" refid="structspk_1_1IVector2" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28" refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TType<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>;<sp/></highlight></codeline>
<codeline lineno="29" refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TType<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>;<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>()<sp/>:<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>(0),<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="43" refid="structspk_1_1IVector2_1ae197d470bdc2579bd6434f1d23e569bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1ae197d470bdc2579bd6434f1d23e569bc" kindref="member">IVector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOtherType<sp/>&amp;p_value)<sp/>:<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>(p_value),<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>(p_value)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="51" refid="structspk_1_1IVector2_1a3199f7709d8d15633920c7602b1c1e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1a3199f7709d8d15633920c7602b1c1e55" kindref="member">IVector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOtherType<sp/>&amp;p_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOtherType<sp/>&amp;p_y)<sp/>:<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>(p_x),<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>(p_y)<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="61" refid="structspk_1_1IVector2_1a4960cc3b4ade5cfd48cd0b78281d179a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TOtherType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TOtherType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structspk_1_1IVector2_1a0ad00eba4b802fae1acede9ef72d21bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::wostream<sp/>&amp;<ref refid="structspk_1_1IVector2_1a0ad00eba4b802fae1acede9ef72d21bd" kindref="member">operator&lt;&lt;</ref>(std::wostream<sp/>&amp;p_os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_self)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_os<sp/>&lt;&lt;<sp/>p_self.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p_self.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_os;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="88" refid="structspk_1_1IVector2_1a9d6df11d0dea89825de285227208b4e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_1a9d6df11d0dea89825de285227208b4e8" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="89"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>+<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>+<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="101" refid="structspk_1_1IVector2_1a93181e2a39090202e764fe87e5a6d1c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_1a93181e2a39090202e764fe87e5a6d1c5" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="114" refid="structspk_1_1IVector2_1a409c7ef14a15f0e7bee9e781ea3f029c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_1a409c7ef14a15f0e7bee9e781ea3f029c" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>*<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>*<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="128" refid="structspk_1_1IVector2_1a7d8fac9e93e024514717ef2594724aec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref><sp/><ref refid="structspk_1_1IVector2_1a7d8fac9e93e024514717ef2594724aec" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="129"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>==<sp/>0<sp/>||<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>divide<sp/>by<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TType&gt;</ref>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>/<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>/<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="142" refid="structspk_1_1IVector2_1a46f20fbffbe8c392bf857f84f6175c33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a46f20fbffbe8c392bf857f84f6175c33" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>+=<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>+=<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="155" refid="structspk_1_1IVector2_1a96c33ee627ed1700aff6627261a074ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a96c33ee627ed1700aff6627261a074ac" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-=<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-=<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="168" refid="structspk_1_1IVector2_1a0609e1b115b35f3293a19e9f1b3aa91c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a0609e1b115b35f3293a19e9f1b3aa91c" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>*=<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>*=<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="182" refid="structspk_1_1IVector2_1a8158dcf13f51999650b00e83c36be525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a8158dcf13f51999650b00e83c36be525" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>==<sp/>0<sp/>||<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>divide<sp/>by<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>/=<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>/=<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="197" refid="structspk_1_1IVector2_1a19a45be30c1cb18600add47dddd15ce1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a19a45be30c1cb18600add47dddd15ce1" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;delta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>==<sp/>delta.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>==<sp/>delta.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="210" refid="structspk_1_1IVector2_1a8a7d7e368595e4a4db1580995d7df6f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a8a7d7e368595e4a4db1580995d7df6f6" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;delta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>!=<sp/>delta.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>||<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>!=<sp/>delta.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="223" refid="structspk_1_1IVector2_1a50ee09f391a89938f95501f6f830818d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a50ee09f391a89938f95501f6f830818d" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&lt;<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>==<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&lt;<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="240" refid="structspk_1_1IVector2_1ab1b6a3babc24fbb384fde2327590f4ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1ab1b6a3babc24fbb384fde2327590f4ef" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="241"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&gt;<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>==<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&gt;<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="257" refid="structspk_1_1IVector2_1ae1604ed3d5d9945e9183396dc976d906" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1ae1604ed3d5d9945e9183396dc976d906" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="258"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&lt;<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>==<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&lt;=<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="274" refid="structspk_1_1IVector2_1acd97e47a3bfd966a412f9520c98748d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1acd97e47a3bfd966a412f9520c98748d1" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="275"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&gt;<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>==<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&amp;&amp;<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&gt;=<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="structspk_1_1IVector2_1aa0d0c755988c4ce9ec8e86e1744d997e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1aa0d0c755988c4ce9ec8e86e1744d997e" kindref="member">norm</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="290"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sqrt(pow(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/>2.0f)<sp/>+<sp/>pow(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>,<sp/>2.0f)));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="303" refid="structspk_1_1IVector2_1abf3cb20ecff4c986f8a7d602e89623a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1abf3cb20ecff4c986f8a7d602e89623a2" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::sqrt(pow(p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/>2)<sp/>+<sp/>pow(p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>,<sp/>2))));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="structspk_1_1IVector2_1a6bc80581ee0fb7ce5f10b751b85fa0cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;float&gt;</ref><sp/><ref refid="structspk_1_1IVector2_1a6bc80581ee0fb7ce5f10b751b85fa0cb" kindref="member">normalize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="316"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tmp_norm;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_norm<sp/>=<sp/>this-&gt;<ref refid="structspk_1_1IVector2_1aa0d0c755988c4ce9ec8e86e1744d997e" kindref="member">norm</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_norm<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>divide<sp/>by<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;float&gt;</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)<sp/>/<sp/>tmp_norm,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)<sp/>/<sp/>tmp_norm));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="334" refid="structspk_1_1IVector2_1a4d5cc1aceeca9b90fcecf6d6fe49520d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1a4d5cc1aceeca9b90fcecf6d6fe49520d" kindref="member">cross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other<sp/>=<sp/><ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(0,<sp/>0))</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="335"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(-(p_other.y<sp/>-<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>),<sp/>p_other.x<sp/>-<sp/><ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="352" refid="structspk_1_1IVector2_1a6ab6d332aa26f3da116169b39014f113" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a6ab6d332aa26f3da116169b39014f113" kindref="member">crossZ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="353"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>*<sp/>p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>*<sp/>p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="367" refid="structspk_1_1IVector2_1a5b615184fb3c906955819e01958102bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a5b615184fb3c906955819e01958102bc" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_center<sp/>=<sp/><ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(0,<sp/>0))</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="368"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-<sp/>p_center.x)<sp/>*<sp/>(p_other.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-<sp/>p_center.x)<sp/>+<sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/>p_center.y)<sp/>*<sp/>(p_other.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/>p_center.y);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="386" refid="structspk_1_1IVector2_1a4c3925ad849ad4d9b1bdba9a8c0d879c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a4c3925ad849ad4d9b1bdba9a8c0d879c" kindref="member">angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_center<sp/>=<sp/><ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(0,<sp/>0))</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="387"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rdot<sp/>=<sp/><ref refid="structspk_1_1IVector2_1a5b615184fb3c906955819e01958102bc" kindref="member">dot</ref>(p_other,<sp/>p_center);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdot<sp/>=<sp/>(rdot<sp/>&lt;<sp/>-1.0f<sp/>?<sp/>-1.0f<sp/>:<sp/>(rdot<sp/>&gt;<sp/>1.0f<sp/>?<sp/>1.0f<sp/>:<sp/>rdot));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a4c3925ad849ad4d9b1bdba9a8c0d879c" kindref="member">angle</ref><sp/>=<sp/>std::acos(rdot);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1a4c3925ad849ad4d9b1bdba9a8c0d879c" kindref="member">angle</ref><sp/>*<sp/>(180<sp/>/<sp/>M_PI));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="structspk_1_1IVector2_1a94bb60fe03d90225da1337147ac4bb72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1a94bb60fe03d90225da1337147ac4bb72" kindref="member">invert</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="405"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>*<sp/>-1,<sp/><ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>*<sp/>-1));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOtherType&gt;</highlight></codeline>
<codeline lineno="419" refid="structspk_1_1IVector2_1a2a657d838bdfcbb18dd0309977d34d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1a2a657d838bdfcbb18dd0309977d34d5b" kindref="member">rotate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2&lt;TOtherType&gt;</ref><sp/>&amp;p_center,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;p_angle)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="420"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>p_angle<sp/>*<sp/>(M_PI<sp/>/<sp/>180);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pcos<sp/>=<sp/>cos(theta);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>psin<sp/>=<sp/>sin(theta);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>=<sp/>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-<sp/>p_center.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)<sp/>*<sp/>pcos<sp/>-<sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/>p_center.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)<sp/>*<sp/>psin;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>=<sp/>(<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-<sp/>p_center.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)<sp/>*<sp/>psin<sp/>+<sp/>(<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/>p_center.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)<sp/>*<sp/>pcos;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result<sp/>+<sp/>p_center);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="structspk_1_1IVector2_1af58b4937f57ec150690b653144e627f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1af58b4937f57ec150690b653144e627f2" kindref="member">floor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_vector)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>=<sp/>::floorf(p_vector.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>=<sp/>::floorf(p_vector.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="structspk_1_1IVector2_1ac22c9a8609ce9b7f2215eff7c120ed0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1ac22c9a8609ce9b7f2215eff7c120ed0c" kindref="member">ceiling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_vector)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>=<sp/>::ceilf(p_vector.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>=<sp/>::ceilf(p_vector.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="structspk_1_1IVector2_1a173f7d72b11d82a87db01e6a6dfe625e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1a173f7d72b11d82a87db01e6a6dfe625e" kindref="member">round</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_vector)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>=<sp/>::roundf(p_vector.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>=<sp/>::roundf(p_vector.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="structspk_1_1IVector2_1ae64ebb9cf02e5bbf329ea31d35e29841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1ae64ebb9cf02e5bbf329ea31d35e29841" kindref="member">min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_max)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(std::min(p_min.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/>p_max.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>),<sp/>std::min(p_min.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>,<sp/>p_max.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="structspk_1_1IVector2_1a452209253a7a42351fc09951297f7d4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1a452209253a7a42351fc09951297f7d4d" kindref="member">max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_max)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(std::max(p_min.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>,<sp/>p_max.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>),<sp/>std::max(p_min.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>,<sp/>p_max.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="structspk_1_1IVector2_1a34fd8293e2ff4b4bfa398dd70d158081" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1a34fd8293e2ff4b4bfa398dd70d158081" kindref="member">isInsideRectangle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_cornerA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_cornerB)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>tmpMin<sp/>=<sp/><ref refid="structspk_1_1IVector2_1ae64ebb9cf02e5bbf329ea31d35e29841" kindref="member">IVector2::min</ref>(p_cornerA,<sp/>p_cornerB);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>tmpMax<sp/>=<sp/><ref refid="structspk_1_1IVector2_1a452209253a7a42351fc09951297f7d4d" kindref="member">IVector2::max</ref>(p_cornerA,<sp/>p_cornerB);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_point.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&lt;<sp/>tmpMin.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>||<sp/>p_point.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&lt;<sp/>tmpMin.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>||</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_point.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>&gt;<sp/>tmpMax.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>||<sp/>p_point.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>&gt;<sp/>tmpMax.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="structspk_1_1IVector2_1ae564274f20ad50bb14dc2d34806cdec4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/><ref refid="structspk_1_1IVector2_1ae564274f20ad50bb14dc2d34806cdec4" kindref="member">lerp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_startingPoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2" kindref="compound">IVector2</ref><sp/>&amp;p_endingPoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structspk_1_1IVector2_1ad681cb3d88fd9a4ca1e60c3c44e600b6" kindref="member">IVector2</ref>(</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_startingPoint.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>+<sp/>(p_endingPoint.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref><sp/>-<sp/>p_startingPoint.<ref refid="structspk_1_1IVector2_1a7aef6e160a85e33668c18c5e743127ef" kindref="member">x</ref>)<sp/>*<sp/>t,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_startingPoint.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>+<sp/>(p_endingPoint.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref><sp/>-<sp/>p_startingPoint.<ref refid="structspk_1_1IVector2_1aefc7c3164247217231e53c0b75e21e3b" kindref="member">y</ref>)<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>IVector2&lt;TType&gt;<sp/>operator+(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IVector2&lt;TType&gt;<sp/>&amp;p_point)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IVector2&lt;TType&gt;(p_value,<sp/>p_value)<sp/>+<sp/>p_point);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>IVector2&lt;TType&gt;<sp/>operator-(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IVector2&lt;TType&gt;<sp/>&amp;p_point)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IVector2&lt;TType&gt;(p_value,<sp/>p_value)<sp/>-<sp/>p_point);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>IVector2&lt;TType&gt;<sp/>operator*(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IVector2&lt;TType&gt;<sp/>&amp;p_point)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IVector2&lt;TType&gt;(p_value,<sp/>p_value)<sp/>*<sp/>p_point);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>TType,<sp/>typename<sp/>TValueType,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic&lt;TValueType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>IVector2&lt;TType&gt;<sp/>operator/(TValueType<sp/>p_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IVector2&lt;TType&gt;<sp/>&amp;p_point)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IVector2&lt;TType&gt;(p_value,<sp/>p_value)<sp/>/<sp/>p_point);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Vector2<sp/>=<sp/>IVector2&lt;float&gt;;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Vector2Int<sp/>=<sp/>IVector2&lt;int&gt;;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Vector2UInt<sp/>=<sp/>IVector2&lt;unsigned<sp/>int&gt;;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="includes/math/spk_vector2.hpp"/>
  </compounddef>
</doxygen>
